/** portable-hack-ast is MIT licensed, see /LICENSE. */
namespace HTL\Pha;

newtype Member = string;

function member_from_string(string $str)[]: Member {
  return $str;
}

function member_to_string(Member $member)[]: string {
  return $member;
}

// #region GENERATED CODE DO NOT EDIT BY HAND!
// This code was generated by bin/codegen_kind_constants.hack "4.94-172".

/** `alias_declaration->aliasAttributeSpec` */
const Member MEMBER_ALIAS_ATTRIBUTE_SPEC = 'alias_attribute_spec';
/** `alias_declaration->aliasConstraint` */
const Member MEMBER_ALIAS_CONSTRAINT = 'alias_constraint';
/** `alias_declaration->aliasEqual` */
const Member MEMBER_ALIAS_EQUAL = 'alias_equal';
/** `alias_declaration->aliasGenericParameter` */
const Member MEMBER_ALIAS_GENERIC_PARAMETER = 'alias_generic_parameter';
/** `alias_declaration->aliasKeyword` */
const Member MEMBER_ALIAS_KEYWORD = 'alias_keyword';
/** `alias_declaration->aliasModifiers` */
const Member MEMBER_ALIAS_MODIFIERS = 'alias_modifiers';
/** `alias_declaration->aliasModuleKwOpt` */
const Member MEMBER_ALIAS_MODULE_KW_OPT = 'alias_module_kw_opt';
/** `alias_declaration->aliasName` */
const Member MEMBER_ALIAS_NAME = 'alias_name';
/** `alias_declaration->aliasSemicolon` */
const Member MEMBER_ALIAS_SEMICOLON = 'alias_semicolon';
/** `alias_declaration->aliasType` */
const Member MEMBER_ALIAS_TYPE = 'alias_type';
/** `anonymous_function->anonymousAsyncKeyword` */
const Member MEMBER_ANONYMOUS_ASYNC_KEYWORD = 'anonymous_async_keyword';
/** `anonymous_function->anonymousAttributeSpec` */
const Member MEMBER_ANONYMOUS_ATTRIBUTE_SPEC = 'anonymous_attribute_spec';
/** `anonymous_function->anonymousBody` */
const Member MEMBER_ANONYMOUS_BODY = 'anonymous_body';
/** `anonymous_class->anonymousClassArgumentList` */
const Member MEMBER_ANONYMOUS_CLASS_ARGUMENT_LIST = 'anonymous_class_argument_list';
/** `anonymous_class->anonymousClassBody` */
const Member MEMBER_ANONYMOUS_CLASS_BODY = 'anonymous_class_body';
/** `anonymous_class->anonymousClassClassKeyword` */
const Member MEMBER_ANONYMOUS_CLASS_CLASS_KEYWORD = 'anonymous_class_class_keyword';
/** `anonymous_class->anonymousClassExtendsKeyword` */
const Member MEMBER_ANONYMOUS_CLASS_EXTENDS_KEYWORD = 'anonymous_class_extends_keyword';
/** `anonymous_class->anonymousClassExtendsList` */
const Member MEMBER_ANONYMOUS_CLASS_EXTENDS_LIST = 'anonymous_class_extends_list';
/** `anonymous_class->anonymousClassImplementsKeyword` */
const Member MEMBER_ANONYMOUS_CLASS_IMPLEMENTS_KEYWORD = 'anonymous_class_implements_keyword';
/** `anonymous_class->anonymousClassImplementsList` */
const Member MEMBER_ANONYMOUS_CLASS_IMPLEMENTS_LIST = 'anonymous_class_implements_list';
/** `anonymous_class->anonymousClassLeftParen` */
const Member MEMBER_ANONYMOUS_CLASS_LEFT_PAREN = 'anonymous_class_left_paren';
/** `anonymous_class->anonymousClassRightParen` */
const Member MEMBER_ANONYMOUS_CLASS_RIGHT_PAREN = 'anonymous_class_right_paren';
/** `anonymous_function->anonymousColon` */
const Member MEMBER_ANONYMOUS_COLON = 'anonymous_colon';
/** `anonymous_function->anonymousCtxList` */
const Member MEMBER_ANONYMOUS_CTX_LIST = 'anonymous_ctx_list';
/** `anonymous_function->anonymousFunctionKeyword` */
const Member MEMBER_ANONYMOUS_FUNCTION_KEYWORD = 'anonymous_function_keyword';
/** `anonymous_function->anonymousLeftParen` */
const Member MEMBER_ANONYMOUS_LEFT_PAREN = 'anonymous_left_paren';
/** `anonymous_function->anonymousParameters` */
const Member MEMBER_ANONYMOUS_PARAMETERS = 'anonymous_parameters';
/** `anonymous_function->anonymousReadonlyReturn` */
const Member MEMBER_ANONYMOUS_READONLY_RETURN = 'anonymous_readonly_return';
/** `anonymous_function->anonymousRightParen` */
const Member MEMBER_ANONYMOUS_RIGHT_PAREN = 'anonymous_right_paren';
/** `anonymous_function->anonymousStaticKeyword` */
const Member MEMBER_ANONYMOUS_STATIC_KEYWORD = 'anonymous_static_keyword';
/** `anonymous_function->anonymousType` */
const Member MEMBER_ANONYMOUS_TYPE = 'anonymous_type';
/** `anonymous_function->anonymousUse` */
const Member MEMBER_ANONYMOUS_USE = 'anonymous_use';
/** `anonymous_function_use_clause->anonymousUseKeyword` */
const Member MEMBER_ANONYMOUS_USE_KEYWORD = 'anonymous_use_keyword';
/** `anonymous_function_use_clause->anonymousUseLeftParen` */
const Member MEMBER_ANONYMOUS_USE_LEFT_PAREN = 'anonymous_use_left_paren';
/** `anonymous_function_use_clause->anonymousUseRightParen` */
const Member MEMBER_ANONYMOUS_USE_RIGHT_PAREN = 'anonymous_use_right_paren';
/** `anonymous_function_use_clause->anonymousUseVariables` */
const Member MEMBER_ANONYMOUS_USE_VARIABLES = 'anonymous_use_variables';
/** `as_expression->asLeftOperand` */
const Member MEMBER_AS_LEFT_OPERAND = 'as_left_operand';
/** `as_expression->asOperator` */
const Member MEMBER_AS_OPERATOR = 'as_operator';
/** `as_expression->asRightOperand` */
const Member MEMBER_AS_RIGHT_OPERAND = 'as_right_operand';
/** `attribute->attributeAt` */
const Member MEMBER_ATTRIBUTE_AT = 'attribute_at';
/** `attribute->attributeAttributeName` */
const Member MEMBER_ATTRIBUTE_ATTRIBUTE_NAME = 'attribute_attribute_name';
/** `attribute_specification->attributeSpecificationAttributes` */
const Member MEMBER_ATTRIBUTE_SPECIFICATION_ATTRIBUTES = 'attribute_specification_attributes';
/** `attributized_specifier->attributizedSpecifierAttributeSpec` */
const Member MEMBER_ATTRIBUTIZED_SPECIFIER_ATTRIBUTE_SPEC = 'attributized_specifier_attribute_spec';
/** `attributized_specifier->attributizedSpecifierType` */
const Member MEMBER_ATTRIBUTIZED_SPECIFIER_TYPE = 'attributized_specifier_type';
/** `awaitable_creation_expression->awaitableAsync` */
const Member MEMBER_AWAITABLE_ASYNC = 'awaitable_async';
/** `awaitable_creation_expression->awaitableAttributeSpec` */
const Member MEMBER_AWAITABLE_ATTRIBUTE_SPEC = 'awaitable_attribute_spec';
/** `awaitable_creation_expression->awaitableCompoundStatement` */
const Member MEMBER_AWAITABLE_COMPOUND_STATEMENT = 'awaitable_compound_statement';
/** `binary_expression->binaryLeftOperand` */
const Member MEMBER_BINARY_LEFT_OPERAND = 'binary_left_operand';
/** `binary_expression->binaryOperator` */
const Member MEMBER_BINARY_OPERATOR = 'binary_operator';
/** `binary_expression->binaryRightOperand` */
const Member MEMBER_BINARY_RIGHT_OPERAND = 'binary_right_operand';
/** `braced_expression->bracedExpressionExpression` */
const Member MEMBER_BRACED_EXPRESSION_EXPRESSION = 'braced_expression_expression';
/** `braced_expression->bracedExpressionLeftBrace` */
const Member MEMBER_BRACED_EXPRESSION_LEFT_BRACE = 'braced_expression_left_brace';
/** `braced_expression->bracedExpressionRightBrace` */
const Member MEMBER_BRACED_EXPRESSION_RIGHT_BRACE = 'braced_expression_right_brace';
/** `break_statement->breakKeyword` */
const Member MEMBER_BREAK_KEYWORD = 'break_keyword';
/** `break_statement->breakSemicolon` */
const Member MEMBER_BREAK_SEMICOLON = 'break_semicolon';
/** `case_label->caseColon` */
const Member MEMBER_CASE_COLON = 'case_colon';
/** `case_label->caseExpression` */
const Member MEMBER_CASE_EXPRESSION = 'case_expression';
/** `case_label->caseKeyword` */
const Member MEMBER_CASE_KEYWORD = 'case_keyword';
/** `cast_expression->castLeftParen` */
const Member MEMBER_CAST_LEFT_PAREN = 'cast_left_paren';
/** `cast_expression->castOperand` */
const Member MEMBER_CAST_OPERAND = 'cast_operand';
/** `cast_expression->castRightParen` */
const Member MEMBER_CAST_RIGHT_PAREN = 'cast_right_paren';
/** `cast_expression->castType` */
const Member MEMBER_CAST_TYPE = 'cast_type';
/** `catch_clause->catchBody` */
const Member MEMBER_CATCH_BODY = 'catch_body';
/** `catch_clause->catchKeyword` */
const Member MEMBER_CATCH_KEYWORD = 'catch_keyword';
/** `catch_clause->catchLeftParen` */
const Member MEMBER_CATCH_LEFT_PAREN = 'catch_left_paren';
/** `catch_clause->catchRightParen` */
const Member MEMBER_CATCH_RIGHT_PAREN = 'catch_right_paren';
/** `catch_clause->catchType` */
const Member MEMBER_CATCH_TYPE = 'catch_type';
/** `catch_clause->catchVariable` */
const Member MEMBER_CATCH_VARIABLE = 'catch_variable';
/** `classish_declaration->classishAttribute` */
const Member MEMBER_CLASSISH_ATTRIBUTE = 'classish_attribute';
/** `classish_declaration->classishBody` */
const Member MEMBER_CLASSISH_BODY = 'classish_body';
/** `classish_body->classishBodyElements` */
const Member MEMBER_CLASSISH_BODY_ELEMENTS = 'classish_body_elements';
/** `classish_body->classishBodyLeftBrace` */
const Member MEMBER_CLASSISH_BODY_LEFT_BRACE = 'classish_body_left_brace';
/** `classish_body->classishBodyRightBrace` */
const Member MEMBER_CLASSISH_BODY_RIGHT_BRACE = 'classish_body_right_brace';
/** `classish_declaration->classishExtendsKeyword` */
const Member MEMBER_CLASSISH_EXTENDS_KEYWORD = 'classish_extends_keyword';
/** `classish_declaration->classishExtendsList` */
const Member MEMBER_CLASSISH_EXTENDS_LIST = 'classish_extends_list';
/** `classish_declaration->classishImplementsKeyword` */
const Member MEMBER_CLASSISH_IMPLEMENTS_KEYWORD = 'classish_implements_keyword';
/** `classish_declaration->classishImplementsList` */
const Member MEMBER_CLASSISH_IMPLEMENTS_LIST = 'classish_implements_list';
/** `classish_declaration->classishKeyword` */
const Member MEMBER_CLASSISH_KEYWORD = 'classish_keyword';
/** `classish_declaration->classishModifiers` */
const Member MEMBER_CLASSISH_MODIFIERS = 'classish_modifiers';
/** `classish_declaration->classishName` */
const Member MEMBER_CLASSISH_NAME = 'classish_name';
/** `classish_declaration->classishTypeParameters` */
const Member MEMBER_CLASSISH_TYPE_PARAMETERS = 'classish_type_parameters';
/** `classish_declaration->classishWhereClause` */
const Member MEMBER_CLASSISH_WHERE_CLAUSE = 'classish_where_clause';
/** `classish_declaration->classishXhp` */
const Member MEMBER_CLASSISH_XHP = 'classish_xhp';
/** `classname_type_specifier->classnameKeyword` */
const Member MEMBER_CLASSNAME_KEYWORD = 'classname_keyword';
/** `classname_type_specifier->classnameLeftAngle` */
const Member MEMBER_CLASSNAME_LEFT_ANGLE = 'classname_left_angle';
/** `classname_type_specifier->classnameRightAngle` */
const Member MEMBER_CLASSNAME_RIGHT_ANGLE = 'classname_right_angle';
/** `classname_type_specifier->classnameTrailingComma` */
const Member MEMBER_CLASSNAME_TRAILING_COMMA = 'classname_trailing_comma';
/** `classname_type_specifier->classnameType` */
const Member MEMBER_CLASSNAME_TYPE = 'classname_type';
/** `closure_type_specifier->closureColon` */
const Member MEMBER_CLOSURE_COLON = 'closure_colon';
/** `closure_type_specifier->closureContexts` */
const Member MEMBER_CLOSURE_CONTEXTS = 'closure_contexts';
/** `closure_type_specifier->closureFunctionKeyword` */
const Member MEMBER_CLOSURE_FUNCTION_KEYWORD = 'closure_function_keyword';
/** `closure_type_specifier->closureInnerLeftParen` */
const Member MEMBER_CLOSURE_INNER_LEFT_PAREN = 'closure_inner_left_paren';
/** `closure_type_specifier->closureInnerRightParen` */
const Member MEMBER_CLOSURE_INNER_RIGHT_PAREN = 'closure_inner_right_paren';
/** `closure_type_specifier->closureOuterLeftParen` */
const Member MEMBER_CLOSURE_OUTER_LEFT_PAREN = 'closure_outer_left_paren';
/** `closure_type_specifier->closureOuterRightParen` */
const Member MEMBER_CLOSURE_OUTER_RIGHT_PAREN = 'closure_outer_right_paren';
/** `closure_parameter_type_specifier->closureParameterCallConvention` */
const Member MEMBER_CLOSURE_PARAMETER_CALL_CONVENTION = 'closure_parameter_call_convention';
/** `closure_type_specifier->closureParameterList` */
const Member MEMBER_CLOSURE_PARAMETER_LIST = 'closure_parameter_list';
/** `closure_parameter_type_specifier->closureParameterReadonly` */
const Member MEMBER_CLOSURE_PARAMETER_READONLY = 'closure_parameter_readonly';
/** `closure_parameter_type_specifier->closureParameterType` */
const Member MEMBER_CLOSURE_PARAMETER_TYPE = 'closure_parameter_type';
/** `closure_type_specifier->closureReadonlyKeyword` */
const Member MEMBER_CLOSURE_READONLY_KEYWORD = 'closure_readonly_keyword';
/** `closure_type_specifier->closureReadonlyReturn` */
const Member MEMBER_CLOSURE_READONLY_RETURN = 'closure_readonly_return';
/** `closure_type_specifier->closureReturnType` */
const Member MEMBER_CLOSURE_RETURN_TYPE = 'closure_return_type';
/** `collection_literal_expression->collectionLiteralInitializers` */
const Member MEMBER_COLLECTION_LITERAL_INITIALIZERS = 'collection_literal_initializers';
/** `collection_literal_expression->collectionLiteralLeftBrace` */
const Member MEMBER_COLLECTION_LITERAL_LEFT_BRACE = 'collection_literal_left_brace';
/** `collection_literal_expression->collectionLiteralName` */
const Member MEMBER_COLLECTION_LITERAL_NAME = 'collection_literal_name';
/** `collection_literal_expression->collectionLiteralRightBrace` */
const Member MEMBER_COLLECTION_LITERAL_RIGHT_BRACE = 'collection_literal_right_brace';
/** `compound_statement->compoundLeftBrace` */
const Member MEMBER_COMPOUND_LEFT_BRACE = 'compound_left_brace';
/** `compound_statement->compoundRightBrace` */
const Member MEMBER_COMPOUND_RIGHT_BRACE = 'compound_right_brace';
/** `compound_statement->compoundStatements` */
const Member MEMBER_COMPOUND_STATEMENTS = 'compound_statements';
/** `concurrent_statement->concurrentKeyword` */
const Member MEMBER_CONCURRENT_KEYWORD = 'concurrent_keyword';
/** `concurrent_statement->concurrentStatement` */
const Member MEMBER_CONCURRENT_STATEMENT = 'concurrent_statement';
/** `conditional_expression->conditionalAlternative` */
const Member MEMBER_CONDITIONAL_ALTERNATIVE = 'conditional_alternative';
/** `conditional_expression->conditionalColon` */
const Member MEMBER_CONDITIONAL_COLON = 'conditional_colon';
/** `conditional_expression->conditionalConsequence` */
const Member MEMBER_CONDITIONAL_CONSEQUENCE = 'conditional_consequence';
/** `conditional_expression->conditionalQuestion` */
const Member MEMBER_CONDITIONAL_QUESTION = 'conditional_question';
/** `conditional_expression->conditionalTest` */
const Member MEMBER_CONDITIONAL_TEST = 'conditional_test';
/** `const_declaration->constAttributeSpec` */
const Member MEMBER_CONST_ATTRIBUTE_SPEC = 'const_attribute_spec';
/** `const_declaration->constDeclarators` */
const Member MEMBER_CONST_DECLARATORS = 'const_declarators';
/** `const_declaration->constKeyword` */
const Member MEMBER_CONST_KEYWORD = 'const_keyword';
/** `const_declaration->constModifiers` */
const Member MEMBER_CONST_MODIFIERS = 'const_modifiers';
/** `const_declaration->constSemicolon` */
const Member MEMBER_CONST_SEMICOLON = 'const_semicolon';
/** `const_declaration->constTypeSpecifier` */
const Member MEMBER_CONST_TYPE_SPECIFIER = 'const_type_specifier';
/** `constant_declarator->constantDeclaratorInitializer` */
const Member MEMBER_CONSTANT_DECLARATOR_INITIALIZER = 'constant_declarator_initializer';
/** `constant_declarator->constantDeclaratorName` */
const Member MEMBER_CONSTANT_DECLARATOR_NAME = 'constant_declarator_name';
/** `type_constraint->constraintKeyword` */
const Member MEMBER_CONSTRAINT_KEYWORD = 'constraint_keyword';
/** `type_constraint->constraintType` */
const Member MEMBER_CONSTRAINT_TYPE = 'constraint_type';
/** `constructor_call->constructorCallArgumentList` */
const Member MEMBER_CONSTRUCTOR_CALL_ARGUMENT_LIST = 'constructor_call_argument_list';
/** `constructor_call->constructorCallLeftParen` */
const Member MEMBER_CONSTRUCTOR_CALL_LEFT_PAREN = 'constructor_call_left_paren';
/** `constructor_call->constructorCallRightParen` */
const Member MEMBER_CONSTRUCTOR_CALL_RIGHT_PAREN = 'constructor_call_right_paren';
/** `constructor_call->constructorCallType` */
const Member MEMBER_CONSTRUCTOR_CALL_TYPE = 'constructor_call_type';
/** `context_const_declaration->contextConstConstKeyword` */
const Member MEMBER_CONTEXT_CONST_CONST_KEYWORD = 'context_const_const_keyword';
/** `context_const_declaration->contextConstConstraint` */
const Member MEMBER_CONTEXT_CONST_CONSTRAINT = 'context_const_constraint';
/** `context_const_declaration->contextConstCtxKeyword` */
const Member MEMBER_CONTEXT_CONST_CTX_KEYWORD = 'context_const_ctx_keyword';
/** `context_const_declaration->contextConstCtxList` */
const Member MEMBER_CONTEXT_CONST_CTX_LIST = 'context_const_ctx_list';
/** `context_const_declaration->contextConstEqual` */
const Member MEMBER_CONTEXT_CONST_EQUAL = 'context_const_equal';
/** `context_const_declaration->contextConstModifiers` */
const Member MEMBER_CONTEXT_CONST_MODIFIERS = 'context_const_modifiers';
/** `context_const_declaration->contextConstName` */
const Member MEMBER_CONTEXT_CONST_NAME = 'context_const_name';
/** `context_const_declaration->contextConstSemicolon` */
const Member MEMBER_CONTEXT_CONST_SEMICOLON = 'context_const_semicolon';
/** `context_const_declaration->contextConstTypeParameters` */
const Member MEMBER_CONTEXT_CONST_TYPE_PARAMETERS = 'context_const_type_parameters';
/** `contexts->contextsLeftBracket` */
const Member MEMBER_CONTEXTS_LEFT_BRACKET = 'contexts_left_bracket';
/** `contexts->contextsRightBracket` */
const Member MEMBER_CONTEXTS_RIGHT_BRACKET = 'contexts_right_bracket';
/** `contexts->contextsTypes` */
const Member MEMBER_CONTEXTS_TYPES = 'contexts_types';
/** `continue_statement->continueKeyword` */
const Member MEMBER_CONTINUE_KEYWORD = 'continue_keyword';
/** `continue_statement->continueSemicolon` */
const Member MEMBER_CONTINUE_SEMICOLON = 'continue_semicolon';
/** `context_alias_declaration->ctxAliasAsConstraint` */
const Member MEMBER_CTX_ALIAS_AS_CONSTRAINT = 'ctx_alias_as_constraint';
/** `context_alias_declaration->ctxAliasAttributeSpec` */
const Member MEMBER_CTX_ALIAS_ATTRIBUTE_SPEC = 'ctx_alias_attribute_spec';
/** `context_alias_declaration->ctxAliasContext` */
const Member MEMBER_CTX_ALIAS_CONTEXT = 'ctx_alias_context';
/** `context_alias_declaration->ctxAliasEqual` */
const Member MEMBER_CTX_ALIAS_EQUAL = 'ctx_alias_equal';
/** `context_alias_declaration->ctxAliasGenericParameter` */
const Member MEMBER_CTX_ALIAS_GENERIC_PARAMETER = 'ctx_alias_generic_parameter';
/** `context_alias_declaration->ctxAliasKeyword` */
const Member MEMBER_CTX_ALIAS_KEYWORD = 'ctx_alias_keyword';
/** `context_alias_declaration->ctxAliasName` */
const Member MEMBER_CTX_ALIAS_NAME = 'ctx_alias_name';
/** `context_alias_declaration->ctxAliasSemicolon` */
const Member MEMBER_CTX_ALIAS_SEMICOLON = 'ctx_alias_semicolon';
/** `context_constraint->ctxConstraintCtxList` */
const Member MEMBER_CTX_CONSTRAINT_CTX_LIST = 'ctx_constraint_ctx_list';
/** `context_constraint->ctxConstraintKeyword` */
const Member MEMBER_CTX_CONSTRAINT_KEYWORD = 'ctx_constraint_keyword';
/** `ctx_in_refinement->ctxInRefinementConstraints` */
const Member MEMBER_CTX_IN_REFINEMENT_CONSTRAINTS = 'ctx_in_refinement_constraints';
/** `ctx_in_refinement->ctxInRefinementCtxList` */
const Member MEMBER_CTX_IN_REFINEMENT_CTX_LIST = 'ctx_in_refinement_ctx_list';
/** `ctx_in_refinement->ctxInRefinementEqual` */
const Member MEMBER_CTX_IN_REFINEMENT_EQUAL = 'ctx_in_refinement_equal';
/** `ctx_in_refinement->ctxInRefinementKeyword` */
const Member MEMBER_CTX_IN_REFINEMENT_KEYWORD = 'ctx_in_refinement_keyword';
/** `ctx_in_refinement->ctxInRefinementName` */
const Member MEMBER_CTX_IN_REFINEMENT_NAME = 'ctx_in_refinement_name';
/** `ctx_in_refinement->ctxInRefinementTypeParameters` */
const Member MEMBER_CTX_IN_REFINEMENT_TYPE_PARAMETERS = 'ctx_in_refinement_type_parameters';
/** `darray_type_specifier->darrayComma` */
const Member MEMBER_DARRAY_COMMA = 'darray_comma';
/** `darray_intrinsic_expression->darrayIntrinsicExplicitType` */
const Member MEMBER_DARRAY_INTRINSIC_EXPLICIT_TYPE = 'darray_intrinsic_explicit_type';
/** `darray_intrinsic_expression->darrayIntrinsicKeyword` */
const Member MEMBER_DARRAY_INTRINSIC_KEYWORD = 'darray_intrinsic_keyword';
/** `darray_intrinsic_expression->darrayIntrinsicLeftBracket` */
const Member MEMBER_DARRAY_INTRINSIC_LEFT_BRACKET = 'darray_intrinsic_left_bracket';
/** `darray_intrinsic_expression->darrayIntrinsicMembers` */
const Member MEMBER_DARRAY_INTRINSIC_MEMBERS = 'darray_intrinsic_members';
/** `darray_intrinsic_expression->darrayIntrinsicRightBracket` */
const Member MEMBER_DARRAY_INTRINSIC_RIGHT_BRACKET = 'darray_intrinsic_right_bracket';
/** `darray_type_specifier->darrayKey` */
const Member MEMBER_DARRAY_KEY = 'darray_key';
/** `darray_type_specifier->darrayKeyword` */
const Member MEMBER_DARRAY_KEYWORD = 'darray_keyword';
/** `darray_type_specifier->darrayLeftAngle` */
const Member MEMBER_DARRAY_LEFT_ANGLE = 'darray_left_angle';
/** `darray_type_specifier->darrayRightAngle` */
const Member MEMBER_DARRAY_RIGHT_ANGLE = 'darray_right_angle';
/** `darray_type_specifier->darrayTrailingComma` */
const Member MEMBER_DARRAY_TRAILING_COMMA = 'darray_trailing_comma';
/** `darray_type_specifier->darrayValue` */
const Member MEMBER_DARRAY_VALUE = 'darray_value';
/** `decorated_expression->decoratedExpressionDecorator` */
const Member MEMBER_DECORATED_EXPRESSION_DECORATOR = 'decorated_expression_decorator';
/** `decorated_expression->decoratedExpressionExpression` */
const Member MEMBER_DECORATED_EXPRESSION_EXPRESSION = 'decorated_expression_expression';
/** `default_label->defaultColon` */
const Member MEMBER_DEFAULT_COLON = 'default_colon';
/** `default_label->defaultKeyword` */
const Member MEMBER_DEFAULT_KEYWORD = 'default_keyword';
/** `define_expression->defineArgumentList` */
const Member MEMBER_DEFINE_ARGUMENT_LIST = 'define_argument_list';
/** `define_expression->defineKeyword` */
const Member MEMBER_DEFINE_KEYWORD = 'define_keyword';
/** `define_expression->defineLeftParen` */
const Member MEMBER_DEFINE_LEFT_PAREN = 'define_left_paren';
/** `define_expression->defineRightParen` */
const Member MEMBER_DEFINE_RIGHT_PAREN = 'define_right_paren';
/** `dictionary_intrinsic_expression->dictionaryIntrinsicExplicitType` */
const Member MEMBER_DICTIONARY_INTRINSIC_EXPLICIT_TYPE = 'dictionary_intrinsic_explicit_type';
/** `dictionary_intrinsic_expression->dictionaryIntrinsicKeyword` */
const Member MEMBER_DICTIONARY_INTRINSIC_KEYWORD = 'dictionary_intrinsic_keyword';
/** `dictionary_intrinsic_expression->dictionaryIntrinsicLeftBracket` */
const Member MEMBER_DICTIONARY_INTRINSIC_LEFT_BRACKET = 'dictionary_intrinsic_left_bracket';
/** `dictionary_intrinsic_expression->dictionaryIntrinsicMembers` */
const Member MEMBER_DICTIONARY_INTRINSIC_MEMBERS = 'dictionary_intrinsic_members';
/** `dictionary_intrinsic_expression->dictionaryIntrinsicRightBracket` */
const Member MEMBER_DICTIONARY_INTRINSIC_RIGHT_BRACKET = 'dictionary_intrinsic_right_bracket';
/** `dictionary_type_specifier->dictionaryTypeKeyword` */
const Member MEMBER_DICTIONARY_TYPE_KEYWORD = 'dictionary_type_keyword';
/** `dictionary_type_specifier->dictionaryTypeLeftAngle` */
const Member MEMBER_DICTIONARY_TYPE_LEFT_ANGLE = 'dictionary_type_left_angle';
/** `dictionary_type_specifier->dictionaryTypeMembers` */
const Member MEMBER_DICTIONARY_TYPE_MEMBERS = 'dictionary_type_members';
/** `dictionary_type_specifier->dictionaryTypeRightAngle` */
const Member MEMBER_DICTIONARY_TYPE_RIGHT_ANGLE = 'dictionary_type_right_angle';
/** `do_statement->doBody` */
const Member MEMBER_DO_BODY = 'do_body';
/** `do_statement->doCondition` */
const Member MEMBER_DO_CONDITION = 'do_condition';
/** `do_statement->doKeyword` */
const Member MEMBER_DO_KEYWORD = 'do_keyword';
/** `do_statement->doLeftParen` */
const Member MEMBER_DO_LEFT_PAREN = 'do_left_paren';
/** `do_statement->doRightParen` */
const Member MEMBER_DO_RIGHT_PAREN = 'do_right_paren';
/** `do_statement->doSemicolon` */
const Member MEMBER_DO_SEMICOLON = 'do_semicolon';
/** `do_statement->doWhileKeyword` */
const Member MEMBER_DO_WHILE_KEYWORD = 'do_while_keyword';
/** `echo_statement->echoExpressions` */
const Member MEMBER_ECHO_EXPRESSIONS = 'echo_expressions';
/** `echo_statement->echoKeyword` */
const Member MEMBER_ECHO_KEYWORD = 'echo_keyword';
/** `echo_statement->echoSemicolon` */
const Member MEMBER_ECHO_SEMICOLON = 'echo_semicolon';
/** `element_initializer->elementArrow` */
const Member MEMBER_ELEMENT_ARROW = 'element_arrow';
/** `element_initializer->elementKey` */
const Member MEMBER_ELEMENT_KEY = 'element_key';
/** `element_initializer->elementValue` */
const Member MEMBER_ELEMENT_VALUE = 'element_value';
/** `else_clause->elseKeyword` */
const Member MEMBER_ELSE_KEYWORD = 'else_keyword';
/** `else_clause->elseStatement` */
const Member MEMBER_ELSE_STATEMENT = 'else_statement';
/** `elseif_clause->elseifCondition` */
const Member MEMBER_ELSEIF_CONDITION = 'elseif_condition';
/** `elseif_clause->elseifKeyword` */
const Member MEMBER_ELSEIF_KEYWORD = 'elseif_keyword';
/** `elseif_clause->elseifLeftParen` */
const Member MEMBER_ELSEIF_LEFT_PAREN = 'elseif_left_paren';
/** `elseif_clause->elseifRightParen` */
const Member MEMBER_ELSEIF_RIGHT_PAREN = 'elseif_right_paren';
/** `elseif_clause->elseifStatement` */
const Member MEMBER_ELSEIF_STATEMENT = 'elseif_statement';
/** `embedded_braced_expression->embeddedBracedExpressionExpression` */
const Member MEMBER_EMBEDDED_BRACED_EXPRESSION_EXPRESSION = 'embedded_braced_expression_expression';
/** `embedded_braced_expression->embeddedBracedExpressionLeftBrace` */
const Member MEMBER_EMBEDDED_BRACED_EXPRESSION_LEFT_BRACE = 'embedded_braced_expression_left_brace';
/** `embedded_braced_expression->embeddedBracedExpressionRightBrace` */
const Member MEMBER_EMBEDDED_BRACED_EXPRESSION_RIGHT_BRACE = 'embedded_braced_expression_right_brace';
/** `embedded_member_selection_expression->embeddedMemberName` */
const Member MEMBER_EMBEDDED_MEMBER_NAME = 'embedded_member_name';
/** `embedded_member_selection_expression->embeddedMemberObject` */
const Member MEMBER_EMBEDDED_MEMBER_OBJECT = 'embedded_member_object';
/** `embedded_member_selection_expression->embeddedMemberOperator` */
const Member MEMBER_EMBEDDED_MEMBER_OPERATOR = 'embedded_member_operator';
/** `embedded_subscript_expression->embeddedSubscriptIndex` */
const Member MEMBER_EMBEDDED_SUBSCRIPT_INDEX = 'embedded_subscript_index';
/** `embedded_subscript_expression->embeddedSubscriptLeftBracket` */
const Member MEMBER_EMBEDDED_SUBSCRIPT_LEFT_BRACKET = 'embedded_subscript_left_bracket';
/** `embedded_subscript_expression->embeddedSubscriptReceiver` */
const Member MEMBER_EMBEDDED_SUBSCRIPT_RECEIVER = 'embedded_subscript_receiver';
/** `embedded_subscript_expression->embeddedSubscriptRightBracket` */
const Member MEMBER_EMBEDDED_SUBSCRIPT_RIGHT_BRACKET = 'embedded_subscript_right_bracket';
/** `end_of_file->endOfFileToken` */
const Member MEMBER_END_OF_FILE_TOKEN = 'end_of_file_token';
/** `enum_atom_expression->enumAtomExpression` */
const Member MEMBER_ENUM_ATOM_EXPRESSION = 'enum_atom_expression';
/** `enum_atom_expression->enumAtomHash` */
const Member MEMBER_ENUM_ATOM_HASH = 'enum_atom_hash';
/** `enum_declaration->enumAttributeSpec` */
const Member MEMBER_ENUM_ATTRIBUTE_SPEC = 'enum_attribute_spec';
/** `enum_declaration->enumBase` */
const Member MEMBER_ENUM_BASE = 'enum_base';
/** `enum_class_declaration->enumClassAttributeSpec` */
const Member MEMBER_ENUM_CLASS_ATTRIBUTE_SPEC = 'enum_class_attribute_spec';
/** `enum_class_declaration->enumClassBase` */
const Member MEMBER_ENUM_CLASS_BASE = 'enum_class_base';
/** `enum_class_declaration->enumClassClassKeyword` */
const Member MEMBER_ENUM_CLASS_CLASS_KEYWORD = 'enum_class_class_keyword';
/** `enum_class_declaration->enumClassColon` */
const Member MEMBER_ENUM_CLASS_COLON = 'enum_class_colon';
/** `enum_class_declaration->enumClassElements` */
const Member MEMBER_ENUM_CLASS_ELEMENTS = 'enum_class_elements';
/** `enum_class_declaration->enumClassEnumKeyword` */
const Member MEMBER_ENUM_CLASS_ENUM_KEYWORD = 'enum_class_enum_keyword';
/** `enum_class_enumerator->enumClassEnumeratorEqual` */
const Member MEMBER_ENUM_CLASS_ENUMERATOR_EQUAL = 'enum_class_enumerator_equal';
/** `enum_class_enumerator->enumClassEnumeratorInitialValue` */
const Member MEMBER_ENUM_CLASS_ENUMERATOR_INITIAL_VALUE = 'enum_class_enumerator_initial_value';
/** `enum_class_enumerator->enumClassEnumeratorInitializer` */
const Member MEMBER_ENUM_CLASS_ENUMERATOR_INITIALIZER = 'enum_class_enumerator_initializer';
/** `enum_class_enumerator->enumClassEnumeratorModifiers` */
const Member MEMBER_ENUM_CLASS_ENUMERATOR_MODIFIERS = 'enum_class_enumerator_modifiers';
/** `enum_class_enumerator->enumClassEnumeratorName` */
const Member MEMBER_ENUM_CLASS_ENUMERATOR_NAME = 'enum_class_enumerator_name';
/** `enum_class_enumerator->enumClassEnumeratorSemicolon` */
const Member MEMBER_ENUM_CLASS_ENUMERATOR_SEMICOLON = 'enum_class_enumerator_semicolon';
/** `enum_class_enumerator->enumClassEnumeratorType` */
const Member MEMBER_ENUM_CLASS_ENUMERATOR_TYPE = 'enum_class_enumerator_type';
/** `enum_class_declaration->enumClassExtends` */
const Member MEMBER_ENUM_CLASS_EXTENDS = 'enum_class_extends';
/** `enum_class_declaration->enumClassExtendsList` */
const Member MEMBER_ENUM_CLASS_EXTENDS_LIST = 'enum_class_extends_list';
/** `enum_class_label_expression->enumClassLabelExpression` */
const Member MEMBER_ENUM_CLASS_LABEL_EXPRESSION = 'enum_class_label_expression';
/** `enum_class_label_expression->enumClassLabelHash` */
const Member MEMBER_ENUM_CLASS_LABEL_HASH = 'enum_class_label_hash';
/** `enum_class_label_expression->enumClassLabelQualifier` */
const Member MEMBER_ENUM_CLASS_LABEL_QUALIFIER = 'enum_class_label_qualifier';
/** `enum_class_declaration->enumClassLeftBrace` */
const Member MEMBER_ENUM_CLASS_LEFT_BRACE = 'enum_class_left_brace';
/** `enum_class_declaration->enumClassModifiers` */
const Member MEMBER_ENUM_CLASS_MODIFIERS = 'enum_class_modifiers';
/** `enum_class_declaration->enumClassName` */
const Member MEMBER_ENUM_CLASS_NAME = 'enum_class_name';
/** `enum_class_declaration->enumClassRightBrace` */
const Member MEMBER_ENUM_CLASS_RIGHT_BRACE = 'enum_class_right_brace';
/** `enum_declaration->enumColon` */
const Member MEMBER_ENUM_COLON = 'enum_colon';
/** `enum_declaration->enumEnumerators` */
const Member MEMBER_ENUM_ENUMERATORS = 'enum_enumerators';
/** `enum_declaration->enumKeyword` */
const Member MEMBER_ENUM_KEYWORD = 'enum_keyword';
/** `enum_declaration->enumLeftBrace` */
const Member MEMBER_ENUM_LEFT_BRACE = 'enum_left_brace';
/** `enum_declaration->enumModifiers` */
const Member MEMBER_ENUM_MODIFIERS = 'enum_modifiers';
/** `enum_declaration->enumName` */
const Member MEMBER_ENUM_NAME = 'enum_name';
/** `enum_declaration->enumRightBrace` */
const Member MEMBER_ENUM_RIGHT_BRACE = 'enum_right_brace';
/** `enum_declaration->enumType` */
const Member MEMBER_ENUM_TYPE = 'enum_type';
/** `enum_declaration->enumUseClauses` */
const Member MEMBER_ENUM_USE_CLAUSES = 'enum_use_clauses';
/** `enum_use->enumUseKeyword` */
const Member MEMBER_ENUM_USE_KEYWORD = 'enum_use_keyword';
/** `enum_use->enumUseNames` */
const Member MEMBER_ENUM_USE_NAMES = 'enum_use_names';
/** `enum_use->enumUseSemicolon` */
const Member MEMBER_ENUM_USE_SEMICOLON = 'enum_use_semicolon';
/** `enumerator->enumeratorEqual` */
const Member MEMBER_ENUMERATOR_EQUAL = 'enumerator_equal';
/** `enumerator->enumeratorName` */
const Member MEMBER_ENUMERATOR_NAME = 'enumerator_name';
/** `enumerator->enumeratorSemicolon` */
const Member MEMBER_ENUMERATOR_SEMICOLON = 'enumerator_semicolon';
/** `enumerator->enumeratorValue` */
const Member MEMBER_ENUMERATOR_VALUE = 'enumerator_value';
/** `error_syntax->errorError` */
const Member MEMBER_ERROR_ERROR = 'error_error';
/** `eTSplice_expression->etSpliceExpressionDollar` */
const Member MEMBER_ET_SPLICE_EXPRESSION_DOLLAR = 'et_splice_expression_dollar';
/** `eTSplice_expression->etSpliceExpressionExpression` */
const Member MEMBER_ET_SPLICE_EXPRESSION_EXPRESSION = 'et_splice_expression_expression';
/** `eTSplice_expression->etSpliceExpressionLeftBrace` */
const Member MEMBER_ET_SPLICE_EXPRESSION_LEFT_BRACE = 'et_splice_expression_left_brace';
/** `eTSplice_expression->etSpliceExpressionRightBrace` */
const Member MEMBER_ET_SPLICE_EXPRESSION_RIGHT_BRACE = 'et_splice_expression_right_brace';
/** `eval_expression->evalArgument` */
const Member MEMBER_EVAL_ARGUMENT = 'eval_argument';
/** `eval_expression->evalKeyword` */
const Member MEMBER_EVAL_KEYWORD = 'eval_keyword';
/** `eval_expression->evalLeftParen` */
const Member MEMBER_EVAL_LEFT_PAREN = 'eval_left_paren';
/** `eval_expression->evalRightParen` */
const Member MEMBER_EVAL_RIGHT_PAREN = 'eval_right_paren';
/** `expression_statement->expressionStatementExpression` */
const Member MEMBER_EXPRESSION_STATEMENT_EXPRESSION = 'expression_statement_expression';
/** `expression_statement->expressionStatementSemicolon` */
const Member MEMBER_EXPRESSION_STATEMENT_SEMICOLON = 'expression_statement_semicolon';
/** `switch_fallthrough->fallthroughKeyword` */
const Member MEMBER_FALLTHROUGH_KEYWORD = 'fallthrough_keyword';
/** `switch_fallthrough->fallthroughSemicolon` */
const Member MEMBER_FALLTHROUGH_SEMICOLON = 'fallthrough_semicolon';
/** `field_specifier->fieldArrow` */
const Member MEMBER_FIELD_ARROW = 'field_arrow';
/** `field_initializer->fieldInitializerArrow` */
const Member MEMBER_FIELD_INITIALIZER_ARROW = 'field_initializer_arrow';
/** `field_initializer->fieldInitializerName` */
const Member MEMBER_FIELD_INITIALIZER_NAME = 'field_initializer_name';
/** `field_initializer->fieldInitializerValue` */
const Member MEMBER_FIELD_INITIALIZER_VALUE = 'field_initializer_value';
/** `field_specifier->fieldName` */
const Member MEMBER_FIELD_NAME = 'field_name';
/** `field_specifier->fieldQuestion` */
const Member MEMBER_FIELD_QUESTION = 'field_question';
/** `field_specifier->fieldType` */
const Member MEMBER_FIELD_TYPE = 'field_type';
/** `file_attribute_specification->fileAttributeSpecificationAttributes` */
const Member MEMBER_FILE_ATTRIBUTE_SPECIFICATION_ATTRIBUTES = 'file_attribute_specification_attributes';
/** `file_attribute_specification->fileAttributeSpecificationColon` */
const Member MEMBER_FILE_ATTRIBUTE_SPECIFICATION_COLON = 'file_attribute_specification_colon';
/** `file_attribute_specification->fileAttributeSpecificationKeyword` */
const Member MEMBER_FILE_ATTRIBUTE_SPECIFICATION_KEYWORD = 'file_attribute_specification_keyword';
/** `file_attribute_specification->fileAttributeSpecificationLeftDoubleAngle` */
const Member MEMBER_FILE_ATTRIBUTE_SPECIFICATION_LEFT_DOUBLE_ANGLE = 'file_attribute_specification_left_double_angle';
/** `file_attribute_specification->fileAttributeSpecificationRightDoubleAngle` */
const Member MEMBER_FILE_ATTRIBUTE_SPECIFICATION_RIGHT_DOUBLE_ANGLE = 'file_attribute_specification_right_double_angle';
/** `finally_clause->finallyBody` */
const Member MEMBER_FINALLY_BODY = 'finally_body';
/** `finally_clause->finallyKeyword` */
const Member MEMBER_FINALLY_KEYWORD = 'finally_keyword';
/** `for_statement->forBody` */
const Member MEMBER_FOR_BODY = 'for_body';
/** `for_statement->forControl` */
const Member MEMBER_FOR_CONTROL = 'for_control';
/** `for_statement->forEndOfLoop` */
const Member MEMBER_FOR_END_OF_LOOP = 'for_end_of_loop';
/** `for_statement->forFirstSemicolon` */
const Member MEMBER_FOR_FIRST_SEMICOLON = 'for_first_semicolon';
/** `for_statement->forInitializer` */
const Member MEMBER_FOR_INITIALIZER = 'for_initializer';
/** `for_statement->forKeyword` */
const Member MEMBER_FOR_KEYWORD = 'for_keyword';
/** `for_statement->forLeftParen` */
const Member MEMBER_FOR_LEFT_PAREN = 'for_left_paren';
/** `for_statement->forRightParen` */
const Member MEMBER_FOR_RIGHT_PAREN = 'for_right_paren';
/** `for_statement->forSecondSemicolon` */
const Member MEMBER_FOR_SECOND_SEMICOLON = 'for_second_semicolon';
/** `foreach_statement->foreachArrow` */
const Member MEMBER_FOREACH_ARROW = 'foreach_arrow';
/** `foreach_statement->foreachAs` */
const Member MEMBER_FOREACH_AS = 'foreach_as';
/** `foreach_statement->foreachAwaitKeyword` */
const Member MEMBER_FOREACH_AWAIT_KEYWORD = 'foreach_await_keyword';
/** `foreach_statement->foreachBody` */
const Member MEMBER_FOREACH_BODY = 'foreach_body';
/** `foreach_statement->foreachCollection` */
const Member MEMBER_FOREACH_COLLECTION = 'foreach_collection';
/** `foreach_statement->foreachKey` */
const Member MEMBER_FOREACH_KEY = 'foreach_key';
/** `foreach_statement->foreachKeyword` */
const Member MEMBER_FOREACH_KEYWORD = 'foreach_keyword';
/** `foreach_statement->foreachLeftParen` */
const Member MEMBER_FOREACH_LEFT_PAREN = 'foreach_left_paren';
/** `foreach_statement->foreachRightParen` */
const Member MEMBER_FOREACH_RIGHT_PAREN = 'foreach_right_paren';
/** `foreach_statement->foreachValue` */
const Member MEMBER_FOREACH_VALUE = 'foreach_value';
/** `function_declaration->functionAttributeSpec` */
const Member MEMBER_FUNCTION_ATTRIBUTE_SPEC = 'function_attribute_spec';
/** `function_declaration->functionBody` */
const Member MEMBER_FUNCTION_BODY = 'function_body';
/** `function_call_expression->functionCallArgumentList` */
const Member MEMBER_FUNCTION_CALL_ARGUMENT_LIST = 'function_call_argument_list';
/** `function_call_expression->functionCallEnumAtom` */
const Member MEMBER_FUNCTION_CALL_ENUM_ATOM = 'function_call_enum_atom';
/** `function_call_expression->functionCallEnumClassLabel` */
const Member MEMBER_FUNCTION_CALL_ENUM_CLASS_LABEL = 'function_call_enum_class_label';
/** `function_call_expression->functionCallLeftParen` */
const Member MEMBER_FUNCTION_CALL_LEFT_PAREN = 'function_call_left_paren';
/** `function_call_expression->functionCallReceiver` */
const Member MEMBER_FUNCTION_CALL_RECEIVER = 'function_call_receiver';
/** `function_call_expression->functionCallRightParen` */
const Member MEMBER_FUNCTION_CALL_RIGHT_PAREN = 'function_call_right_paren';
/** `function_call_expression->functionCallTypeArgs` */
const Member MEMBER_FUNCTION_CALL_TYPE_ARGS = 'function_call_type_args';
/** `function_declaration_header->functionColon` */
const Member MEMBER_FUNCTION_COLON = 'function_colon';
/** `function_declaration_header->functionContexts` */
const Member MEMBER_FUNCTION_CONTEXTS = 'function_contexts';
/** `function_ctx_type_specifier->functionCtxTypeKeyword` */
const Member MEMBER_FUNCTION_CTX_TYPE_KEYWORD = 'function_ctx_type_keyword';
/** `function_ctx_type_specifier->functionCtxTypeVariable` */
const Member MEMBER_FUNCTION_CTX_TYPE_VARIABLE = 'function_ctx_type_variable';
/** `function_declaration->functionDeclarationHeader` */
const Member MEMBER_FUNCTION_DECLARATION_HEADER = 'function_declaration_header';
/** `function_declaration_header->functionKeyword` */
const Member MEMBER_FUNCTION_KEYWORD = 'function_keyword';
/** `function_declaration_header->functionLeftParen` */
const Member MEMBER_FUNCTION_LEFT_PAREN = 'function_left_paren';
/** `function_declaration_header->functionModifiers` */
const Member MEMBER_FUNCTION_MODIFIERS = 'function_modifiers';
/** `function_declaration_header->functionName` */
const Member MEMBER_FUNCTION_NAME = 'function_name';
/** `function_declaration_header->functionParameterList` */
const Member MEMBER_FUNCTION_PARAMETER_LIST = 'function_parameter_list';
/** `function_pointer_expression->functionPointerReceiver` */
const Member MEMBER_FUNCTION_POINTER_RECEIVER = 'function_pointer_receiver';
/** `function_pointer_expression->functionPointerTypeArgs` */
const Member MEMBER_FUNCTION_POINTER_TYPE_ARGS = 'function_pointer_type_args';
/** `function_declaration_header->functionReadonlyReturn` */
const Member MEMBER_FUNCTION_READONLY_RETURN = 'function_readonly_return';
/** `function_declaration_header->functionRightParen` */
const Member MEMBER_FUNCTION_RIGHT_PAREN = 'function_right_paren';
/** `function_declaration_header->functionType` */
const Member MEMBER_FUNCTION_TYPE = 'function_type';
/** `function_declaration_header->functionTypeParameterList` */
const Member MEMBER_FUNCTION_TYPE_PARAMETER_LIST = 'function_type_parameter_list';
/** `function_declaration_header->functionWhereClause` */
const Member MEMBER_FUNCTION_WHERE_CLAUSE = 'function_where_clause';
/** `generic_type_specifier->genericArgumentList` */
const Member MEMBER_GENERIC_ARGUMENT_LIST = 'generic_argument_list';
/** `generic_type_specifier->genericClassType` */
const Member MEMBER_GENERIC_CLASS_TYPE = 'generic_class_type';
/** `if_statement->ifCondition` */
const Member MEMBER_IF_CONDITION = 'if_condition';
/** `if_statement->ifElseClause` */
const Member MEMBER_IF_ELSE_CLAUSE = 'if_else_clause';
/** `if_statement->ifElseifClauses` */
const Member MEMBER_IF_ELSEIF_CLAUSES = 'if_elseif_clauses';
/** `if_statement->ifKeyword` */
const Member MEMBER_IF_KEYWORD = 'if_keyword';
/** `if_statement->ifLeftParen` */
const Member MEMBER_IF_LEFT_PAREN = 'if_left_paren';
/** `if_statement->ifRightParen` */
const Member MEMBER_IF_RIGHT_PAREN = 'if_right_paren';
/** `if_statement->ifStatement` */
const Member MEMBER_IF_STATEMENT = 'if_statement';
/** `inclusion_directive->inclusionExpression` */
const Member MEMBER_INCLUSION_EXPRESSION = 'inclusion_expression';
/** `inclusion_expression->inclusionFilename` */
const Member MEMBER_INCLUSION_FILENAME = 'inclusion_filename';
/** `inclusion_expression->inclusionRequire` */
const Member MEMBER_INCLUSION_REQUIRE = 'inclusion_require';
/** `inclusion_directive->inclusionSemicolon` */
const Member MEMBER_INCLUSION_SEMICOLON = 'inclusion_semicolon';
/** `intersection_type_specifier->intersectionLeftParen` */
const Member MEMBER_INTERSECTION_LEFT_PAREN = 'intersection_left_paren';
/** `intersection_type_specifier->intersectionRightParen` */
const Member MEMBER_INTERSECTION_RIGHT_PAREN = 'intersection_right_paren';
/** `intersection_type_specifier->intersectionTypes` */
const Member MEMBER_INTERSECTION_TYPES = 'intersection_types';
/** `is_expression->isLeftOperand` */
const Member MEMBER_IS_LEFT_OPERAND = 'is_left_operand';
/** `is_expression->isOperator` */
const Member MEMBER_IS_OPERATOR = 'is_operator';
/** `is_expression->isRightOperand` */
const Member MEMBER_IS_RIGHT_OPERAND = 'is_right_operand';
/** `isset_expression->issetArgumentList` */
const Member MEMBER_ISSET_ARGUMENT_LIST = 'isset_argument_list';
/** `isset_expression->issetKeyword` */
const Member MEMBER_ISSET_KEYWORD = 'isset_keyword';
/** `isset_expression->issetLeftParen` */
const Member MEMBER_ISSET_LEFT_PAREN = 'isset_left_paren';
/** `isset_expression->issetRightParen` */
const Member MEMBER_ISSET_RIGHT_PAREN = 'isset_right_paren';
/** `keyset_intrinsic_expression->keysetIntrinsicExplicitType` */
const Member MEMBER_KEYSET_INTRINSIC_EXPLICIT_TYPE = 'keyset_intrinsic_explicit_type';
/** `keyset_intrinsic_expression->keysetIntrinsicKeyword` */
const Member MEMBER_KEYSET_INTRINSIC_KEYWORD = 'keyset_intrinsic_keyword';
/** `keyset_intrinsic_expression->keysetIntrinsicLeftBracket` */
const Member MEMBER_KEYSET_INTRINSIC_LEFT_BRACKET = 'keyset_intrinsic_left_bracket';
/** `keyset_intrinsic_expression->keysetIntrinsicMembers` */
const Member MEMBER_KEYSET_INTRINSIC_MEMBERS = 'keyset_intrinsic_members';
/** `keyset_intrinsic_expression->keysetIntrinsicRightBracket` */
const Member MEMBER_KEYSET_INTRINSIC_RIGHT_BRACKET = 'keyset_intrinsic_right_bracket';
/** `keyset_type_specifier->keysetTypeKeyword` */
const Member MEMBER_KEYSET_TYPE_KEYWORD = 'keyset_type_keyword';
/** `keyset_type_specifier->keysetTypeLeftAngle` */
const Member MEMBER_KEYSET_TYPE_LEFT_ANGLE = 'keyset_type_left_angle';
/** `keyset_type_specifier->keysetTypeRightAngle` */
const Member MEMBER_KEYSET_TYPE_RIGHT_ANGLE = 'keyset_type_right_angle';
/** `keyset_type_specifier->keysetTypeTrailingComma` */
const Member MEMBER_KEYSET_TYPE_TRAILING_COMMA = 'keyset_type_trailing_comma';
/** `keyset_type_specifier->keysetTypeType` */
const Member MEMBER_KEYSET_TYPE_TYPE = 'keyset_type_type';
/** `lambda_expression->lambdaArrow` */
const Member MEMBER_LAMBDA_ARROW = 'lambda_arrow';
/** `lambda_expression->lambdaAsync` */
const Member MEMBER_LAMBDA_ASYNC = 'lambda_async';
/** `lambda_expression->lambdaAttributeSpec` */
const Member MEMBER_LAMBDA_ATTRIBUTE_SPEC = 'lambda_attribute_spec';
/** `lambda_expression->lambdaBody` */
const Member MEMBER_LAMBDA_BODY = 'lambda_body';
/** `lambda_signature->lambdaColon` */
const Member MEMBER_LAMBDA_COLON = 'lambda_colon';
/** `lambda_signature->lambdaContexts` */
const Member MEMBER_LAMBDA_CONTEXTS = 'lambda_contexts';
/** `lambda_signature->lambdaLeftParen` */
const Member MEMBER_LAMBDA_LEFT_PAREN = 'lambda_left_paren';
/** `lambda_signature->lambdaParameters` */
const Member MEMBER_LAMBDA_PARAMETERS = 'lambda_parameters';
/** `lambda_signature->lambdaReadonlyReturn` */
const Member MEMBER_LAMBDA_READONLY_RETURN = 'lambda_readonly_return';
/** `lambda_signature->lambdaRightParen` */
const Member MEMBER_LAMBDA_RIGHT_PAREN = 'lambda_right_paren';
/** `lambda_expression->lambdaSignature` */
const Member MEMBER_LAMBDA_SIGNATURE = 'lambda_signature';
/** `lambda_signature->lambdaType` */
const Member MEMBER_LAMBDA_TYPE = 'lambda_type';
/** `like_type_specifier->likeTilde` */
const Member MEMBER_LIKE_TILDE = 'like_tilde';
/** `like_type_specifier->likeType` */
const Member MEMBER_LIKE_TYPE = 'like_type';
/** `list_item->listItem` */
const Member MEMBER_LIST_ITEM = 'list_item';
/** `list_expression->listKeyword` */
const Member MEMBER_LIST_KEYWORD = 'list_keyword';
/** `list_expression->listLeftParen` */
const Member MEMBER_LIST_LEFT_PAREN = 'list_left_paren';
/** `list_expression->listMembers` */
const Member MEMBER_LIST_MEMBERS = 'list_members';
/** `list_expression->listRightParen` */
const Member MEMBER_LIST_RIGHT_PAREN = 'list_right_paren';
/** `list_item->listSeparator` */
const Member MEMBER_LIST_SEPARATOR = 'list_separator';
/** `literal->literalExpression` */
const Member MEMBER_LITERAL_EXPRESSION = 'literal_expression';
/** `markup_section->markupHashbang` */
const Member MEMBER_MARKUP_HASHBANG = 'markup_hashbang';
/** `markup_section->markupSuffix` */
const Member MEMBER_MARKUP_SUFFIX = 'markup_suffix';
/** `markup_suffix->markupSuffixLessThanQuestion` */
const Member MEMBER_MARKUP_SUFFIX_LESS_THAN_QUESTION = 'markup_suffix_less_than_question';
/** `markup_suffix->markupSuffixName` */
const Member MEMBER_MARKUP_SUFFIX_NAME = 'markup_suffix_name';
/** `member_selection_expression->memberName` */
const Member MEMBER_MEMBER_NAME = 'member_name';
/** `member_selection_expression->memberObject` */
const Member MEMBER_MEMBER_OBJECT = 'member_object';
/** `member_selection_expression->memberOperator` */
const Member MEMBER_MEMBER_OPERATOR = 'member_operator';
/** `methodish_declaration->methodishAttribute` */
const Member MEMBER_METHODISH_ATTRIBUTE = 'methodish_attribute';
/** `methodish_declaration->methodishFunctionBody` */
const Member MEMBER_METHODISH_FUNCTION_BODY = 'methodish_function_body';
/** `methodish_declaration->methodishFunctionDeclHeader` */
const Member MEMBER_METHODISH_FUNCTION_DECL_HEADER = 'methodish_function_decl_header';
/** `methodish_declaration->methodishSemicolon` */
const Member MEMBER_METHODISH_SEMICOLON = 'methodish_semicolon';
/** `methodish_trait_resolution->methodishTraitAttribute` */
const Member MEMBER_METHODISH_TRAIT_ATTRIBUTE = 'methodish_trait_attribute';
/** `methodish_trait_resolution->methodishTraitEqual` */
const Member MEMBER_METHODISH_TRAIT_EQUAL = 'methodish_trait_equal';
/** `methodish_trait_resolution->methodishTraitFunctionDeclHeader` */
const Member MEMBER_METHODISH_TRAIT_FUNCTION_DECL_HEADER = 'methodish_trait_function_decl_header';
/** `methodish_trait_resolution->methodishTraitName` */
const Member MEMBER_METHODISH_TRAIT_NAME = 'methodish_trait_name';
/** `methodish_trait_resolution->methodishTraitSemicolon` */
const Member MEMBER_METHODISH_TRAIT_SEMICOLON = 'methodish_trait_semicolon';
/** `module_declaration->moduleDeclarationAttributeSpec` */
const Member MEMBER_MODULE_DECLARATION_ATTRIBUTE_SPEC = 'module_declaration_attribute_spec';
/** `module_declaration->moduleDeclarationExports` */
const Member MEMBER_MODULE_DECLARATION_EXPORTS = 'module_declaration_exports';
/** `module_declaration->moduleDeclarationImports` */
const Member MEMBER_MODULE_DECLARATION_IMPORTS = 'module_declaration_imports';
/** `module_declaration->moduleDeclarationKeyword` */
const Member MEMBER_MODULE_DECLARATION_KEYWORD = 'module_declaration_keyword';
/** `module_declaration->moduleDeclarationLeftBrace` */
const Member MEMBER_MODULE_DECLARATION_LEFT_BRACE = 'module_declaration_left_brace';
/** `module_declaration->moduleDeclarationModuleKeyword` */
const Member MEMBER_MODULE_DECLARATION_MODULE_KEYWORD = 'module_declaration_module_keyword';
/** `module_declaration->moduleDeclarationName` */
const Member MEMBER_MODULE_DECLARATION_NAME = 'module_declaration_name';
/** `module_declaration->moduleDeclarationNewKeyword` */
const Member MEMBER_MODULE_DECLARATION_NEW_KEYWORD = 'module_declaration_new_keyword';
/** `module_declaration->moduleDeclarationRightBrace` */
const Member MEMBER_MODULE_DECLARATION_RIGHT_BRACE = 'module_declaration_right_brace';
/** `module_exports->moduleExportsExports` */
const Member MEMBER_MODULE_EXPORTS_EXPORTS = 'module_exports_exports';
/** `module_exports->moduleExportsExportsKeyword` */
const Member MEMBER_MODULE_EXPORTS_EXPORTS_KEYWORD = 'module_exports_exports_keyword';
/** `module_exports->moduleExportsLeftBrace` */
const Member MEMBER_MODULE_EXPORTS_LEFT_BRACE = 'module_exports_left_brace';
/** `module_exports->moduleExportsRightBrace` */
const Member MEMBER_MODULE_EXPORTS_RIGHT_BRACE = 'module_exports_right_brace';
/** `module_imports->moduleImportsImports` */
const Member MEMBER_MODULE_IMPORTS_IMPORTS = 'module_imports_imports';
/** `module_imports->moduleImportsImportsKeyword` */
const Member MEMBER_MODULE_IMPORTS_IMPORTS_KEYWORD = 'module_imports_imports_keyword';
/** `module_imports->moduleImportsLeftBrace` */
const Member MEMBER_MODULE_IMPORTS_LEFT_BRACE = 'module_imports_left_brace';
/** `module_imports->moduleImportsRightBrace` */
const Member MEMBER_MODULE_IMPORTS_RIGHT_BRACE = 'module_imports_right_brace';
/** `module_membership_declaration->moduleMembershipDeclarationModuleKeyword` */
const Member MEMBER_MODULE_MEMBERSHIP_DECLARATION_MODULE_KEYWORD = 'module_membership_declaration_module_keyword';
/** `module_membership_declaration->moduleMembershipDeclarationName` */
const Member MEMBER_MODULE_MEMBERSHIP_DECLARATION_NAME = 'module_membership_declaration_name';
/** `module_membership_declaration->moduleMembershipDeclarationSemicolon` */
const Member MEMBER_MODULE_MEMBERSHIP_DECLARATION_SEMICOLON = 'module_membership_declaration_semicolon';
/** `module_name->moduleNameParts` */
const Member MEMBER_MODULE_NAME_PARTS = 'module_name_parts';
/** `namespace_declaration->namespaceBody` */
const Member MEMBER_NAMESPACE_BODY = 'namespace_body';
/** `namespace_body->namespaceDeclarations` */
const Member MEMBER_NAMESPACE_DECLARATIONS = 'namespace_declarations';
/** `namespace_group_use_declaration->namespaceGroupUseClauses` */
const Member MEMBER_NAMESPACE_GROUP_USE_CLAUSES = 'namespace_group_use_clauses';
/** `namespace_group_use_declaration->namespaceGroupUseKeyword` */
const Member MEMBER_NAMESPACE_GROUP_USE_KEYWORD = 'namespace_group_use_keyword';
/** `namespace_group_use_declaration->namespaceGroupUseKind` */
const Member MEMBER_NAMESPACE_GROUP_USE_KIND = 'namespace_group_use_kind';
/** `namespace_group_use_declaration->namespaceGroupUseLeftBrace` */
const Member MEMBER_NAMESPACE_GROUP_USE_LEFT_BRACE = 'namespace_group_use_left_brace';
/** `namespace_group_use_declaration->namespaceGroupUsePrefix` */
const Member MEMBER_NAMESPACE_GROUP_USE_PREFIX = 'namespace_group_use_prefix';
/** `namespace_group_use_declaration->namespaceGroupUseRightBrace` */
const Member MEMBER_NAMESPACE_GROUP_USE_RIGHT_BRACE = 'namespace_group_use_right_brace';
/** `namespace_group_use_declaration->namespaceGroupUseSemicolon` */
const Member MEMBER_NAMESPACE_GROUP_USE_SEMICOLON = 'namespace_group_use_semicolon';
/** `namespace_declaration->namespaceHeader` */
const Member MEMBER_NAMESPACE_HEADER = 'namespace_header';
/** `namespace_declaration_header->namespaceKeyword` */
const Member MEMBER_NAMESPACE_KEYWORD = 'namespace_keyword';
/** `namespace_body->namespaceLeftBrace` */
const Member MEMBER_NAMESPACE_LEFT_BRACE = 'namespace_left_brace';
/** `namespace_declaration_header->namespaceName` */
const Member MEMBER_NAMESPACE_NAME = 'namespace_name';
/** `namespace_body->namespaceRightBrace` */
const Member MEMBER_NAMESPACE_RIGHT_BRACE = 'namespace_right_brace';
/** `namespace_empty_body->namespaceSemicolon` */
const Member MEMBER_NAMESPACE_SEMICOLON = 'namespace_semicolon';
/** `namespace_use_clause->namespaceUseAlias` */
const Member MEMBER_NAMESPACE_USE_ALIAS = 'namespace_use_alias';
/** `namespace_use_clause->namespaceUseAs` */
const Member MEMBER_NAMESPACE_USE_AS = 'namespace_use_as';
/** `namespace_use_clause->namespaceUseClauseKind` */
const Member MEMBER_NAMESPACE_USE_CLAUSE_KIND = 'namespace_use_clause_kind';
/** `namespace_use_declaration->namespaceUseClauses` */
const Member MEMBER_NAMESPACE_USE_CLAUSES = 'namespace_use_clauses';
/** `namespace_use_declaration->namespaceUseKeyword` */
const Member MEMBER_NAMESPACE_USE_KEYWORD = 'namespace_use_keyword';
/** `namespace_use_declaration->namespaceUseKind` */
const Member MEMBER_NAMESPACE_USE_KIND = 'namespace_use_kind';
/** `namespace_use_clause->namespaceUseName` */
const Member MEMBER_NAMESPACE_USE_NAME = 'namespace_use_name';
/** `namespace_use_declaration->namespaceUseSemicolon` */
const Member MEMBER_NAMESPACE_USE_SEMICOLON = 'namespace_use_semicolon';
/** `nullable_as_expression->nullableAsLeftOperand` */
const Member MEMBER_NULLABLE_AS_LEFT_OPERAND = 'nullable_as_left_operand';
/** `nullable_as_expression->nullableAsOperator` */
const Member MEMBER_NULLABLE_AS_OPERATOR = 'nullable_as_operator';
/** `nullable_as_expression->nullableAsRightOperand` */
const Member MEMBER_NULLABLE_AS_RIGHT_OPERAND = 'nullable_as_right_operand';
/** `nullable_type_specifier->nullableQuestion` */
const Member MEMBER_NULLABLE_QUESTION = 'nullable_question';
/** `nullable_type_specifier->nullableType` */
const Member MEMBER_NULLABLE_TYPE = 'nullable_type';
/** `object_creation_expression->objectCreationNewKeyword` */
const Member MEMBER_OBJECT_CREATION_NEW_KEYWORD = 'object_creation_new_keyword';
/** `object_creation_expression->objectCreationObject` */
const Member MEMBER_OBJECT_CREATION_OBJECT = 'object_creation_object';
/** `old_attribute_specification->oldAttributeSpecificationAttributes` */
const Member MEMBER_OLD_ATTRIBUTE_SPECIFICATION_ATTRIBUTES = 'old_attribute_specification_attributes';
/** `old_attribute_specification->oldAttributeSpecificationLeftDoubleAngle` */
const Member MEMBER_OLD_ATTRIBUTE_SPECIFICATION_LEFT_DOUBLE_ANGLE = 'old_attribute_specification_left_double_angle';
/** `old_attribute_specification->oldAttributeSpecificationRightDoubleAngle` */
const Member MEMBER_OLD_ATTRIBUTE_SPECIFICATION_RIGHT_DOUBLE_ANGLE = 'old_attribute_specification_right_double_angle';
/** `package_declaration->packageDeclarationAttributeSpec` */
const Member MEMBER_PACKAGE_DECLARATION_ATTRIBUTE_SPEC = 'package_declaration_attribute_spec';
/** `package_declaration->packageDeclarationIncludes` */
const Member MEMBER_PACKAGE_DECLARATION_INCLUDES = 'package_declaration_includes';
/** `package_declaration->packageDeclarationLeftBrace` */
const Member MEMBER_PACKAGE_DECLARATION_LEFT_BRACE = 'package_declaration_left_brace';
/** `package_declaration->packageDeclarationName` */
const Member MEMBER_PACKAGE_DECLARATION_NAME = 'package_declaration_name';
/** `package_declaration->packageDeclarationPackageKeyword` */
const Member MEMBER_PACKAGE_DECLARATION_PACKAGE_KEYWORD = 'package_declaration_package_keyword';
/** `package_declaration->packageDeclarationRightBrace` */
const Member MEMBER_PACKAGE_DECLARATION_RIGHT_BRACE = 'package_declaration_right_brace';
/** `package_declaration->packageDeclarationUses` */
const Member MEMBER_PACKAGE_DECLARATION_USES = 'package_declaration_uses';
/** `package_includes->packageIncludesIncludeKeyword` */
const Member MEMBER_PACKAGE_INCLUDES_INCLUDE_KEYWORD = 'package_includes_include_keyword';
/** `package_includes->packageIncludesIncludes` */
const Member MEMBER_PACKAGE_INCLUDES_INCLUDES = 'package_includes_includes';
/** `package_includes->packageIncludesLeftBrace` */
const Member MEMBER_PACKAGE_INCLUDES_LEFT_BRACE = 'package_includes_left_brace';
/** `package_includes->packageIncludesRightBrace` */
const Member MEMBER_PACKAGE_INCLUDES_RIGHT_BRACE = 'package_includes_right_brace';
/** `package_uses->packageUsesLeftBrace` */
const Member MEMBER_PACKAGE_USES_LEFT_BRACE = 'package_uses_left_brace';
/** `package_uses->packageUsesRightBrace` */
const Member MEMBER_PACKAGE_USES_RIGHT_BRACE = 'package_uses_right_brace';
/** `package_uses->packageUsesUseKeyword` */
const Member MEMBER_PACKAGE_USES_USE_KEYWORD = 'package_uses_use_keyword';
/** `package_uses->packageUsesUses` */
const Member MEMBER_PACKAGE_USES_USES = 'package_uses_uses';
/** `parameter_declaration->parameterAttribute` */
const Member MEMBER_PARAMETER_ATTRIBUTE = 'parameter_attribute';
/** `parameter_declaration->parameterCallConvention` */
const Member MEMBER_PARAMETER_CALL_CONVENTION = 'parameter_call_convention';
/** `parameter_declaration->parameterDefaultValue` */
const Member MEMBER_PARAMETER_DEFAULT_VALUE = 'parameter_default_value';
/** `parameter_declaration->parameterName` */
const Member MEMBER_PARAMETER_NAME = 'parameter_name';
/** `parameter_declaration->parameterReadonly` */
const Member MEMBER_PARAMETER_READONLY = 'parameter_readonly';
/** `parameter_declaration->parameterType` */
const Member MEMBER_PARAMETER_TYPE = 'parameter_type';
/** `parameter_declaration->parameterVisibility` */
const Member MEMBER_PARAMETER_VISIBILITY = 'parameter_visibility';
/** `parenthesized_expression->parenthesizedExpressionExpression` */
const Member MEMBER_PARENTHESIZED_EXPRESSION_EXPRESSION = 'parenthesized_expression_expression';
/** `parenthesized_expression->parenthesizedExpressionLeftParen` */
const Member MEMBER_PARENTHESIZED_EXPRESSION_LEFT_PAREN = 'parenthesized_expression_left_paren';
/** `parenthesized_expression->parenthesizedExpressionRightParen` */
const Member MEMBER_PARENTHESIZED_EXPRESSION_RIGHT_PAREN = 'parenthesized_expression_right_paren';
/** `pipe_variable->pipeVariableExpression` */
const Member MEMBER_PIPE_VARIABLE_EXPRESSION = 'pipe_variable_expression';
/** `postfix_unary_expression->postfixUnaryOperand` */
const Member MEMBER_POSTFIX_UNARY_OPERAND = 'postfix_unary_operand';
/** `postfix_unary_expression->postfixUnaryOperator` */
const Member MEMBER_POSTFIX_UNARY_OPERATOR = 'postfix_unary_operator';
/** `prefix_unary_expression->prefixUnaryOperand` */
const Member MEMBER_PREFIX_UNARY_OPERAND = 'prefix_unary_operand';
/** `prefix_unary_expression->prefixUnaryOperator` */
const Member MEMBER_PREFIX_UNARY_OPERATOR = 'prefix_unary_operator';
/** `prefixed_code_expression->prefixedCodeExpression` */
const Member MEMBER_PREFIXED_CODE_EXPRESSION = 'prefixed_code_expression';
/** `prefixed_code_expression->prefixedCodeLeftBacktick` */
const Member MEMBER_PREFIXED_CODE_LEFT_BACKTICK = 'prefixed_code_left_backtick';
/** `prefixed_code_expression->prefixedCodePrefix` */
const Member MEMBER_PREFIXED_CODE_PREFIX = 'prefixed_code_prefix';
/** `prefixed_code_expression->prefixedCodeRightBacktick` */
const Member MEMBER_PREFIXED_CODE_RIGHT_BACKTICK = 'prefixed_code_right_backtick';
/** `prefixed_string->prefixedStringName` */
const Member MEMBER_PREFIXED_STRING_NAME = 'prefixed_string_name';
/** `prefixed_string->prefixedStringStr` */
const Member MEMBER_PREFIXED_STRING_STR = 'prefixed_string_str';
/** `property_declaration->propertyAttributeSpec` */
const Member MEMBER_PROPERTY_ATTRIBUTE_SPEC = 'property_attribute_spec';
/** `property_declaration->propertyDeclarators` */
const Member MEMBER_PROPERTY_DECLARATORS = 'property_declarators';
/** `property_declarator->propertyInitializer` */
const Member MEMBER_PROPERTY_INITIALIZER = 'property_initializer';
/** `property_declaration->propertyModifiers` */
const Member MEMBER_PROPERTY_MODIFIERS = 'property_modifiers';
/** `property_declarator->propertyName` */
const Member MEMBER_PROPERTY_NAME = 'property_name';
/** `property_declaration->propertySemicolon` */
const Member MEMBER_PROPERTY_SEMICOLON = 'property_semicolon';
/** `property_declaration->propertyType` */
const Member MEMBER_PROPERTY_TYPE = 'property_type';
/** `qualified_name->qualifiedNameParts` */
const Member MEMBER_QUALIFIED_NAME_PARTS = 'qualified_name_parts';
/** `record_declaration->recordAttributeSpec` */
const Member MEMBER_RECORD_ATTRIBUTE_SPEC = 'record_attribute_spec';
/** `record_creation_expression->recordCreationLeftBracket` */
const Member MEMBER_RECORD_CREATION_LEFT_BRACKET = 'record_creation_left_bracket';
/** `record_creation_expression->recordCreationMembers` */
const Member MEMBER_RECORD_CREATION_MEMBERS = 'record_creation_members';
/** `record_creation_expression->recordCreationRightBracket` */
const Member MEMBER_RECORD_CREATION_RIGHT_BRACKET = 'record_creation_right_bracket';
/** `record_creation_expression->recordCreationType` */
const Member MEMBER_RECORD_CREATION_TYPE = 'record_creation_type';
/** `record_declaration->recordExtendsKeyword` */
const Member MEMBER_RECORD_EXTENDS_KEYWORD = 'record_extends_keyword';
/** `record_declaration->recordExtendsOpt` */
const Member MEMBER_RECORD_EXTENDS_OPT = 'record_extends_opt';
/** `record_field->recordFieldInit` */
const Member MEMBER_RECORD_FIELD_INIT = 'record_field_init';
/** `record_field->recordFieldName` */
const Member MEMBER_RECORD_FIELD_NAME = 'record_field_name';
/** `record_field->recordFieldSemi` */
const Member MEMBER_RECORD_FIELD_SEMI = 'record_field_semi';
/** `record_field->recordFieldType` */
const Member MEMBER_RECORD_FIELD_TYPE = 'record_field_type';
/** `record_declaration->recordFields` */
const Member MEMBER_RECORD_FIELDS = 'record_fields';
/** `record_declaration->recordKeyword` */
const Member MEMBER_RECORD_KEYWORD = 'record_keyword';
/** `record_declaration->recordLeftBrace` */
const Member MEMBER_RECORD_LEFT_BRACE = 'record_left_brace';
/** `record_declaration->recordModifier` */
const Member MEMBER_RECORD_MODIFIER = 'record_modifier';
/** `record_declaration->recordName` */
const Member MEMBER_RECORD_NAME = 'record_name';
/** `record_declaration->recordRightBrace` */
const Member MEMBER_RECORD_RIGHT_BRACE = 'record_right_brace';
/** `reified_type_argument->reifiedTypeArgumentReified` */
const Member MEMBER_REIFIED_TYPE_ARGUMENT_REIFIED = 'reified_type_argument_reified';
/** `reified_type_argument->reifiedTypeArgumentType` */
const Member MEMBER_REIFIED_TYPE_ARGUMENT_TYPE = 'reified_type_argument_type';
/** `require_clause->requireKeyword` */
const Member MEMBER_REQUIRE_KEYWORD = 'require_keyword';
/** `require_clause->requireKind` */
const Member MEMBER_REQUIRE_KIND = 'require_kind';
/** `require_clause->requireName` */
const Member MEMBER_REQUIRE_NAME = 'require_name';
/** `require_clause->requireSemicolon` */
const Member MEMBER_REQUIRE_SEMICOLON = 'require_semicolon';
/** `return_statement->returnExpression` */
const Member MEMBER_RETURN_EXPRESSION = 'return_expression';
/** `return_statement->returnKeyword` */
const Member MEMBER_RETURN_KEYWORD = 'return_keyword';
/** `return_statement->returnSemicolon` */
const Member MEMBER_RETURN_SEMICOLON = 'return_semicolon';
/** `safe_member_selection_expression->safeMemberName` */
const Member MEMBER_SAFE_MEMBER_NAME = 'safe_member_name';
/** `safe_member_selection_expression->safeMemberObject` */
const Member MEMBER_SAFE_MEMBER_OBJECT = 'safe_member_object';
/** `safe_member_selection_expression->safeMemberOperator` */
const Member MEMBER_SAFE_MEMBER_OPERATOR = 'safe_member_operator';
/** `scope_resolution_expression->scopeResolutionName` */
const Member MEMBER_SCOPE_RESOLUTION_NAME = 'scope_resolution_name';
/** `scope_resolution_expression->scopeResolutionOperator` */
const Member MEMBER_SCOPE_RESOLUTION_OPERATOR = 'scope_resolution_operator';
/** `scope_resolution_expression->scopeResolutionQualifier` */
const Member MEMBER_SCOPE_RESOLUTION_QUALIFIER = 'scope_resolution_qualifier';
/** `script->scriptDeclarations` */
const Member MEMBER_SCRIPT_DECLARATIONS = 'script_declarations';
/** `shape_expression->shapeExpressionFields` */
const Member MEMBER_SHAPE_EXPRESSION_FIELDS = 'shape_expression_fields';
/** `shape_expression->shapeExpressionKeyword` */
const Member MEMBER_SHAPE_EXPRESSION_KEYWORD = 'shape_expression_keyword';
/** `shape_expression->shapeExpressionLeftParen` */
const Member MEMBER_SHAPE_EXPRESSION_LEFT_PAREN = 'shape_expression_left_paren';
/** `shape_expression->shapeExpressionRightParen` */
const Member MEMBER_SHAPE_EXPRESSION_RIGHT_PAREN = 'shape_expression_right_paren';
/** `shape_type_specifier->shapeTypeEllipsis` */
const Member MEMBER_SHAPE_TYPE_ELLIPSIS = 'shape_type_ellipsis';
/** `shape_type_specifier->shapeTypeFields` */
const Member MEMBER_SHAPE_TYPE_FIELDS = 'shape_type_fields';
/** `shape_type_specifier->shapeTypeKeyword` */
const Member MEMBER_SHAPE_TYPE_KEYWORD = 'shape_type_keyword';
/** `shape_type_specifier->shapeTypeLeftParen` */
const Member MEMBER_SHAPE_TYPE_LEFT_PAREN = 'shape_type_left_paren';
/** `shape_type_specifier->shapeTypeRightParen` */
const Member MEMBER_SHAPE_TYPE_RIGHT_PAREN = 'shape_type_right_paren';
/** `simple_initializer->simpleInitializerEqual` */
const Member MEMBER_SIMPLE_INITIALIZER_EQUAL = 'simple_initializer_equal';
/** `simple_initializer->simpleInitializerValue` */
const Member MEMBER_SIMPLE_INITIALIZER_VALUE = 'simple_initializer_value';
/** `simple_type_specifier->simpleTypeSpecifier` */
const Member MEMBER_SIMPLE_TYPE_SPECIFIER = 'simple_type_specifier';
/** `soft_type_specifier->softAt` */
const Member MEMBER_SOFT_AT = 'soft_at';
/** `soft_type_specifier->softType` */
const Member MEMBER_SOFT_TYPE = 'soft_type';
/** `subscript_expression->subscriptIndex` */
const Member MEMBER_SUBSCRIPT_INDEX = 'subscript_index';
/** `subscript_expression->subscriptLeftBracket` */
const Member MEMBER_SUBSCRIPT_LEFT_BRACKET = 'subscript_left_bracket';
/** `subscript_expression->subscriptReceiver` */
const Member MEMBER_SUBSCRIPT_RECEIVER = 'subscript_receiver';
/** `subscript_expression->subscriptRightBracket` */
const Member MEMBER_SUBSCRIPT_RIGHT_BRACKET = 'subscript_right_bracket';
/** `switch_statement->switchExpression` */
const Member MEMBER_SWITCH_EXPRESSION = 'switch_expression';
/** `switch_statement->switchKeyword` */
const Member MEMBER_SWITCH_KEYWORD = 'switch_keyword';
/** `switch_statement->switchLeftBrace` */
const Member MEMBER_SWITCH_LEFT_BRACE = 'switch_left_brace';
/** `switch_statement->switchLeftParen` */
const Member MEMBER_SWITCH_LEFT_PAREN = 'switch_left_paren';
/** `switch_statement->switchRightBrace` */
const Member MEMBER_SWITCH_RIGHT_BRACE = 'switch_right_brace';
/** `switch_statement->switchRightParen` */
const Member MEMBER_SWITCH_RIGHT_PAREN = 'switch_right_paren';
/** `switch_section->switchSectionFallthrough` */
const Member MEMBER_SWITCH_SECTION_FALLTHROUGH = 'switch_section_fallthrough';
/** `switch_section->switchSectionLabels` */
const Member MEMBER_SWITCH_SECTION_LABELS = 'switch_section_labels';
/** `switch_section->switchSectionStatements` */
const Member MEMBER_SWITCH_SECTION_STATEMENTS = 'switch_section_statements';
/** `switch_statement->switchSections` */
const Member MEMBER_SWITCH_SECTIONS = 'switch_sections';
/** `throw_statement->throwExpression` */
const Member MEMBER_THROW_EXPRESSION = 'throw_expression';
/** `throw_statement->throwKeyword` */
const Member MEMBER_THROW_KEYWORD = 'throw_keyword';
/** `throw_statement->throwSemicolon` */
const Member MEMBER_THROW_SEMICOLON = 'throw_semicolon';
/** `trait_use_alias_item->traitUseAliasItemAliasedName` */
const Member MEMBER_TRAIT_USE_ALIAS_ITEM_ALIASED_NAME = 'trait_use_alias_item_aliased_name';
/** `trait_use_alias_item->traitUseAliasItemAliasingName` */
const Member MEMBER_TRAIT_USE_ALIAS_ITEM_ALIASING_NAME = 'trait_use_alias_item_aliasing_name';
/** `trait_use_alias_item->traitUseAliasItemKeyword` */
const Member MEMBER_TRAIT_USE_ALIAS_ITEM_KEYWORD = 'trait_use_alias_item_keyword';
/** `trait_use_alias_item->traitUseAliasItemModifiers` */
const Member MEMBER_TRAIT_USE_ALIAS_ITEM_MODIFIERS = 'trait_use_alias_item_modifiers';
/** `trait_use_conflict_resolution->traitUseConflictResolutionClauses` */
const Member MEMBER_TRAIT_USE_CONFLICT_RESOLUTION_CLAUSES = 'trait_use_conflict_resolution_clauses';
/** `trait_use_conflict_resolution->traitUseConflictResolutionKeyword` */
const Member MEMBER_TRAIT_USE_CONFLICT_RESOLUTION_KEYWORD = 'trait_use_conflict_resolution_keyword';
/** `trait_use_conflict_resolution->traitUseConflictResolutionLeftBrace` */
const Member MEMBER_TRAIT_USE_CONFLICT_RESOLUTION_LEFT_BRACE = 'trait_use_conflict_resolution_left_brace';
/** `trait_use_conflict_resolution->traitUseConflictResolutionNames` */
const Member MEMBER_TRAIT_USE_CONFLICT_RESOLUTION_NAMES = 'trait_use_conflict_resolution_names';
/** `trait_use_conflict_resolution->traitUseConflictResolutionRightBrace` */
const Member MEMBER_TRAIT_USE_CONFLICT_RESOLUTION_RIGHT_BRACE = 'trait_use_conflict_resolution_right_brace';
/** `trait_use->traitUseKeyword` */
const Member MEMBER_TRAIT_USE_KEYWORD = 'trait_use_keyword';
/** `trait_use->traitUseNames` */
const Member MEMBER_TRAIT_USE_NAMES = 'trait_use_names';
/** `trait_use_precedence_item->traitUsePrecedenceItemKeyword` */
const Member MEMBER_TRAIT_USE_PRECEDENCE_ITEM_KEYWORD = 'trait_use_precedence_item_keyword';
/** `trait_use_precedence_item->traitUsePrecedenceItemName` */
const Member MEMBER_TRAIT_USE_PRECEDENCE_ITEM_NAME = 'trait_use_precedence_item_name';
/** `trait_use_precedence_item->traitUsePrecedenceItemRemovedNames` */
const Member MEMBER_TRAIT_USE_PRECEDENCE_ITEM_REMOVED_NAMES = 'trait_use_precedence_item_removed_names';
/** `trait_use->traitUseSemicolon` */
const Member MEMBER_TRAIT_USE_SEMICOLON = 'trait_use_semicolon';
/** `try_statement->tryCatchClauses` */
const Member MEMBER_TRY_CATCH_CLAUSES = 'try_catch_clauses';
/** `try_statement->tryCompoundStatement` */
const Member MEMBER_TRY_COMPOUND_STATEMENT = 'try_compound_statement';
/** `try_statement->tryFinallyClause` */
const Member MEMBER_TRY_FINALLY_CLAUSE = 'try_finally_clause';
/** `try_statement->tryKeyword` */
const Member MEMBER_TRY_KEYWORD = 'try_keyword';
/** `tuple_expression->tupleExpressionItems` */
const Member MEMBER_TUPLE_EXPRESSION_ITEMS = 'tuple_expression_items';
/** `tuple_expression->tupleExpressionKeyword` */
const Member MEMBER_TUPLE_EXPRESSION_KEYWORD = 'tuple_expression_keyword';
/** `tuple_expression->tupleExpressionLeftParen` */
const Member MEMBER_TUPLE_EXPRESSION_LEFT_PAREN = 'tuple_expression_left_paren';
/** `tuple_expression->tupleExpressionRightParen` */
const Member MEMBER_TUPLE_EXPRESSION_RIGHT_PAREN = 'tuple_expression_right_paren';
/** `tuple_type_specifier->tupleLeftParen` */
const Member MEMBER_TUPLE_LEFT_PAREN = 'tuple_left_paren';
/** `tuple_type_specifier->tupleRightParen` */
const Member MEMBER_TUPLE_RIGHT_PAREN = 'tuple_right_paren';
/** `tuple_type_explicit_specifier->tupleTypeKeyword` */
const Member MEMBER_TUPLE_TYPE_KEYWORD = 'tuple_type_keyword';
/** `tuple_type_explicit_specifier->tupleTypeLeftAngle` */
const Member MEMBER_TUPLE_TYPE_LEFT_ANGLE = 'tuple_type_left_angle';
/** `tuple_type_explicit_specifier->tupleTypeRightAngle` */
const Member MEMBER_TUPLE_TYPE_RIGHT_ANGLE = 'tuple_type_right_angle';
/** `tuple_type_explicit_specifier->tupleTypeTypes` */
const Member MEMBER_TUPLE_TYPE_TYPES = 'tuple_type_types';
/** `tuple_type_specifier->tupleTypes` */
const Member MEMBER_TUPLE_TYPES = 'tuple_types';
/** `type_arguments->typeArgumentsLeftAngle` */
const Member MEMBER_TYPE_ARGUMENTS_LEFT_ANGLE = 'type_arguments_left_angle';
/** `type_arguments->typeArgumentsRightAngle` */
const Member MEMBER_TYPE_ARGUMENTS_RIGHT_ANGLE = 'type_arguments_right_angle';
/** `type_arguments->typeArgumentsTypes` */
const Member MEMBER_TYPE_ARGUMENTS_TYPES = 'type_arguments_types';
/** `type_parameter->typeAttributeSpec` */
const Member MEMBER_TYPE_ATTRIBUTE_SPEC = 'type_attribute_spec';
/** `type_const_declaration->typeConstAttributeSpec` */
const Member MEMBER_TYPE_CONST_ATTRIBUTE_SPEC = 'type_const_attribute_spec';
/** `type_const_declaration->typeConstEqual` */
const Member MEMBER_TYPE_CONST_EQUAL = 'type_const_equal';
/** `type_const_declaration->typeConstKeyword` */
const Member MEMBER_TYPE_CONST_KEYWORD = 'type_const_keyword';
/** `type_const_declaration->typeConstModifiers` */
const Member MEMBER_TYPE_CONST_MODIFIERS = 'type_const_modifiers';
/** `type_const_declaration->typeConstName` */
const Member MEMBER_TYPE_CONST_NAME = 'type_const_name';
/** `type_const_declaration->typeConstSemicolon` */
const Member MEMBER_TYPE_CONST_SEMICOLON = 'type_const_semicolon';
/** `type_const_declaration->typeConstTypeConstraint` */
const Member MEMBER_TYPE_CONST_TYPE_CONSTRAINT = 'type_const_type_constraint';
/** `type_const_declaration->typeConstTypeConstraints` */
const Member MEMBER_TYPE_CONST_TYPE_CONSTRAINTS = 'type_const_type_constraints';
/** `type_const_declaration->typeConstTypeKeyword` */
const Member MEMBER_TYPE_CONST_TYPE_KEYWORD = 'type_const_type_keyword';
/** `type_const_declaration->typeConstTypeParameters` */
const Member MEMBER_TYPE_CONST_TYPE_PARAMETERS = 'type_const_type_parameters';
/** `type_const_declaration->typeConstTypeSpecifier` */
const Member MEMBER_TYPE_CONST_TYPE_SPECIFIER = 'type_const_type_specifier';
/** `type_constant->typeConstantLeftType` */
const Member MEMBER_TYPE_CONSTANT_LEFT_TYPE = 'type_constant_left_type';
/** `type_constant->typeConstantRightType` */
const Member MEMBER_TYPE_CONSTANT_RIGHT_TYPE = 'type_constant_right_type';
/** `type_constant->typeConstantSeparator` */
const Member MEMBER_TYPE_CONSTANT_SEPARATOR = 'type_constant_separator';
/** `type_parameter->typeConstraints` */
const Member MEMBER_TYPE_CONSTRAINTS = 'type_constraints';
/** `type_in_refinement->typeInRefinementConstraints` */
const Member MEMBER_TYPE_IN_REFINEMENT_CONSTRAINTS = 'type_in_refinement_constraints';
/** `type_in_refinement->typeInRefinementEqual` */
const Member MEMBER_TYPE_IN_REFINEMENT_EQUAL = 'type_in_refinement_equal';
/** `type_in_refinement->typeInRefinementKeyword` */
const Member MEMBER_TYPE_IN_REFINEMENT_KEYWORD = 'type_in_refinement_keyword';
/** `type_in_refinement->typeInRefinementName` */
const Member MEMBER_TYPE_IN_REFINEMENT_NAME = 'type_in_refinement_name';
/** `type_in_refinement->typeInRefinementType` */
const Member MEMBER_TYPE_IN_REFINEMENT_TYPE = 'type_in_refinement_type';
/** `type_in_refinement->typeInRefinementTypeParameters` */
const Member MEMBER_TYPE_IN_REFINEMENT_TYPE_PARAMETERS = 'type_in_refinement_type_parameters';
/** `type_parameter->typeName` */
const Member MEMBER_TYPE_NAME = 'type_name';
/** `type_parameter->typeParamParams` */
const Member MEMBER_TYPE_PARAM_PARAMS = 'type_param_params';
/** `type_parameters->typeParametersLeftAngle` */
const Member MEMBER_TYPE_PARAMETERS_LEFT_ANGLE = 'type_parameters_left_angle';
/** `type_parameters->typeParametersParameters` */
const Member MEMBER_TYPE_PARAMETERS_PARAMETERS = 'type_parameters_parameters';
/** `type_parameters->typeParametersRightAngle` */
const Member MEMBER_TYPE_PARAMETERS_RIGHT_ANGLE = 'type_parameters_right_angle';
/** `type_refinement->typeRefinementKeyword` */
const Member MEMBER_TYPE_REFINEMENT_KEYWORD = 'type_refinement_keyword';
/** `type_refinement->typeRefinementLeftBrace` */
const Member MEMBER_TYPE_REFINEMENT_LEFT_BRACE = 'type_refinement_left_brace';
/** `type_refinement->typeRefinementMembers` */
const Member MEMBER_TYPE_REFINEMENT_MEMBERS = 'type_refinement_members';
/** `type_refinement->typeRefinementRightBrace` */
const Member MEMBER_TYPE_REFINEMENT_RIGHT_BRACE = 'type_refinement_right_brace';
/** `type_refinement->typeRefinementType` */
const Member MEMBER_TYPE_REFINEMENT_TYPE = 'type_refinement_type';
/** `type_parameter->typeReified` */
const Member MEMBER_TYPE_REIFIED = 'type_reified';
/** `type_parameter->typeVariance` */
const Member MEMBER_TYPE_VARIANCE = 'type_variance';
/** `union_type_specifier->unionLeftParen` */
const Member MEMBER_UNION_LEFT_PAREN = 'union_left_paren';
/** `union_type_specifier->unionRightParen` */
const Member MEMBER_UNION_RIGHT_PAREN = 'union_right_paren';
/** `union_type_specifier->unionTypes` */
const Member MEMBER_UNION_TYPES = 'union_types';
/** `unset_statement->unsetKeyword` */
const Member MEMBER_UNSET_KEYWORD = 'unset_keyword';
/** `unset_statement->unsetLeftParen` */
const Member MEMBER_UNSET_LEFT_PAREN = 'unset_left_paren';
/** `unset_statement->unsetRightParen` */
const Member MEMBER_UNSET_RIGHT_PAREN = 'unset_right_paren';
/** `unset_statement->unsetSemicolon` */
const Member MEMBER_UNSET_SEMICOLON = 'unset_semicolon';
/** `unset_statement->unsetVariables` */
const Member MEMBER_UNSET_VARIABLES = 'unset_variables';
/** `upcast_expression->upcastLeftOperand` */
const Member MEMBER_UPCAST_LEFT_OPERAND = 'upcast_left_operand';
/** `upcast_expression->upcastOperator` */
const Member MEMBER_UPCAST_OPERATOR = 'upcast_operator';
/** `upcast_expression->upcastRightOperand` */
const Member MEMBER_UPCAST_RIGHT_OPERAND = 'upcast_right_operand';
/** `using_statement_block_scoped->usingBlockAwaitKeyword` */
const Member MEMBER_USING_BLOCK_AWAIT_KEYWORD = 'using_block_await_keyword';
/** `using_statement_block_scoped->usingBlockBody` */
const Member MEMBER_USING_BLOCK_BODY = 'using_block_body';
/** `using_statement_block_scoped->usingBlockExpressions` */
const Member MEMBER_USING_BLOCK_EXPRESSIONS = 'using_block_expressions';
/** `using_statement_block_scoped->usingBlockLeftParen` */
const Member MEMBER_USING_BLOCK_LEFT_PAREN = 'using_block_left_paren';
/** `using_statement_block_scoped->usingBlockRightParen` */
const Member MEMBER_USING_BLOCK_RIGHT_PAREN = 'using_block_right_paren';
/** `using_statement_block_scoped->usingBlockUsingKeyword` */
const Member MEMBER_USING_BLOCK_USING_KEYWORD = 'using_block_using_keyword';
/** `using_statement_function_scoped->usingFunctionAwaitKeyword` */
const Member MEMBER_USING_FUNCTION_AWAIT_KEYWORD = 'using_function_await_keyword';
/** `using_statement_function_scoped->usingFunctionExpression` */
const Member MEMBER_USING_FUNCTION_EXPRESSION = 'using_function_expression';
/** `using_statement_function_scoped->usingFunctionSemicolon` */
const Member MEMBER_USING_FUNCTION_SEMICOLON = 'using_function_semicolon';
/** `using_statement_function_scoped->usingFunctionUsingKeyword` */
const Member MEMBER_USING_FUNCTION_USING_KEYWORD = 'using_function_using_keyword';
/** `variable->variableExpression` */
const Member MEMBER_VARIABLE_EXPRESSION = 'variable_expression';
/** `variadic_parameter->variadicParameterCallConvention` */
const Member MEMBER_VARIADIC_PARAMETER_CALL_CONVENTION = 'variadic_parameter_call_convention';
/** `variadic_parameter->variadicParameterEllipsis` */
const Member MEMBER_VARIADIC_PARAMETER_ELLIPSIS = 'variadic_parameter_ellipsis';
/** `variadic_parameter->variadicParameterType` */
const Member MEMBER_VARIADIC_PARAMETER_TYPE = 'variadic_parameter_type';
/** `varray_intrinsic_expression->varrayIntrinsicExplicitType` */
const Member MEMBER_VARRAY_INTRINSIC_EXPLICIT_TYPE = 'varray_intrinsic_explicit_type';
/** `varray_intrinsic_expression->varrayIntrinsicKeyword` */
const Member MEMBER_VARRAY_INTRINSIC_KEYWORD = 'varray_intrinsic_keyword';
/** `varray_intrinsic_expression->varrayIntrinsicLeftBracket` */
const Member MEMBER_VARRAY_INTRINSIC_LEFT_BRACKET = 'varray_intrinsic_left_bracket';
/** `varray_intrinsic_expression->varrayIntrinsicMembers` */
const Member MEMBER_VARRAY_INTRINSIC_MEMBERS = 'varray_intrinsic_members';
/** `varray_intrinsic_expression->varrayIntrinsicRightBracket` */
const Member MEMBER_VARRAY_INTRINSIC_RIGHT_BRACKET = 'varray_intrinsic_right_bracket';
/** `varray_type_specifier->varrayKeyword` */
const Member MEMBER_VARRAY_KEYWORD = 'varray_keyword';
/** `varray_type_specifier->varrayLeftAngle` */
const Member MEMBER_VARRAY_LEFT_ANGLE = 'varray_left_angle';
/** `varray_type_specifier->varrayRightAngle` */
const Member MEMBER_VARRAY_RIGHT_ANGLE = 'varray_right_angle';
/** `varray_type_specifier->varrayTrailingComma` */
const Member MEMBER_VARRAY_TRAILING_COMMA = 'varray_trailing_comma';
/** `varray_type_specifier->varrayType` */
const Member MEMBER_VARRAY_TYPE = 'varray_type';
/** `vector_intrinsic_expression->vectorIntrinsicExplicitType` */
const Member MEMBER_VECTOR_INTRINSIC_EXPLICIT_TYPE = 'vector_intrinsic_explicit_type';
/** `vector_intrinsic_expression->vectorIntrinsicKeyword` */
const Member MEMBER_VECTOR_INTRINSIC_KEYWORD = 'vector_intrinsic_keyword';
/** `vector_intrinsic_expression->vectorIntrinsicLeftBracket` */
const Member MEMBER_VECTOR_INTRINSIC_LEFT_BRACKET = 'vector_intrinsic_left_bracket';
/** `vector_intrinsic_expression->vectorIntrinsicMembers` */
const Member MEMBER_VECTOR_INTRINSIC_MEMBERS = 'vector_intrinsic_members';
/** `vector_intrinsic_expression->vectorIntrinsicRightBracket` */
const Member MEMBER_VECTOR_INTRINSIC_RIGHT_BRACKET = 'vector_intrinsic_right_bracket';
/** `vector_type_specifier->vectorTypeKeyword` */
const Member MEMBER_VECTOR_TYPE_KEYWORD = 'vector_type_keyword';
/** `vector_type_specifier->vectorTypeLeftAngle` */
const Member MEMBER_VECTOR_TYPE_LEFT_ANGLE = 'vector_type_left_angle';
/** `vector_type_specifier->vectorTypeRightAngle` */
const Member MEMBER_VECTOR_TYPE_RIGHT_ANGLE = 'vector_type_right_angle';
/** `vector_type_specifier->vectorTypeTrailingComma` */
const Member MEMBER_VECTOR_TYPE_TRAILING_COMMA = 'vector_type_trailing_comma';
/** `vector_type_specifier->vectorTypeType` */
const Member MEMBER_VECTOR_TYPE_TYPE = 'vector_type_type';
/** `where_clause->whereClauseConstraints` */
const Member MEMBER_WHERE_CLAUSE_CONSTRAINTS = 'where_clause_constraints';
/** `where_clause->whereClauseKeyword` */
const Member MEMBER_WHERE_CLAUSE_KEYWORD = 'where_clause_keyword';
/** `where_constraint->whereConstraintLeftType` */
const Member MEMBER_WHERE_CONSTRAINT_LEFT_TYPE = 'where_constraint_left_type';
/** `where_constraint->whereConstraintOperator` */
const Member MEMBER_WHERE_CONSTRAINT_OPERATOR = 'where_constraint_operator';
/** `where_constraint->whereConstraintRightType` */
const Member MEMBER_WHERE_CONSTRAINT_RIGHT_TYPE = 'where_constraint_right_type';
/** `while_statement->whileBody` */
const Member MEMBER_WHILE_BODY = 'while_body';
/** `while_statement->whileCondition` */
const Member MEMBER_WHILE_CONDITION = 'while_condition';
/** `while_statement->whileKeyword` */
const Member MEMBER_WHILE_KEYWORD = 'while_keyword';
/** `while_statement->whileLeftParen` */
const Member MEMBER_WHILE_LEFT_PAREN = 'while_left_paren';
/** `while_statement->whileRightParen` */
const Member MEMBER_WHILE_RIGHT_PAREN = 'while_right_paren';
/** `xhp_class_attribute_declaration->xhpAttributeAttributes` */
const Member MEMBER_XHP_ATTRIBUTE_ATTRIBUTES = 'xhp_attribute_attributes';
/** `xhp_class_attribute->xhpAttributeDeclInitializer` */
const Member MEMBER_XHP_ATTRIBUTE_DECL_INITIALIZER = 'xhp_attribute_decl_initializer';
/** `xhp_class_attribute->xhpAttributeDeclName` */
const Member MEMBER_XHP_ATTRIBUTE_DECL_NAME = 'xhp_attribute_decl_name';
/** `xhp_class_attribute->xhpAttributeDeclRequired` */
const Member MEMBER_XHP_ATTRIBUTE_DECL_REQUIRED = 'xhp_attribute_decl_required';
/** `xhp_class_attribute->xhpAttributeDeclType` */
const Member MEMBER_XHP_ATTRIBUTE_DECL_TYPE = 'xhp_attribute_decl_type';
/** `xhp_class_attribute_declaration->xhpAttributeKeyword` */
const Member MEMBER_XHP_ATTRIBUTE_KEYWORD = 'xhp_attribute_keyword';
/** `xhp_class_attribute_declaration->xhpAttributeSemicolon` */
const Member MEMBER_XHP_ATTRIBUTE_SEMICOLON = 'xhp_attribute_semicolon';
/** `xhp_expression->xhpBody` */
const Member MEMBER_XHP_BODY = 'xhp_body';
/** `xhp_category_declaration->xhpCategoryCategories` */
const Member MEMBER_XHP_CATEGORY_CATEGORIES = 'xhp_category_categories';
/** `xhp_category_declaration->xhpCategoryKeyword` */
const Member MEMBER_XHP_CATEGORY_KEYWORD = 'xhp_category_keyword';
/** `xhp_category_declaration->xhpCategorySemicolon` */
const Member MEMBER_XHP_CATEGORY_SEMICOLON = 'xhp_category_semicolon';
/** `xhp_children_declaration->xhpChildrenExpression` */
const Member MEMBER_XHP_CHILDREN_EXPRESSION = 'xhp_children_expression';
/** `xhp_children_declaration->xhpChildrenKeyword` */
const Member MEMBER_XHP_CHILDREN_KEYWORD = 'xhp_children_keyword';
/** `xhp_children_parenthesized_list->xhpChildrenListLeftParen` */
const Member MEMBER_XHP_CHILDREN_LIST_LEFT_PAREN = 'xhp_children_list_left_paren';
/** `xhp_children_parenthesized_list->xhpChildrenListRightParen` */
const Member MEMBER_XHP_CHILDREN_LIST_RIGHT_PAREN = 'xhp_children_list_right_paren';
/** `xhp_children_parenthesized_list->xhpChildrenListXhpChildren` */
const Member MEMBER_XHP_CHILDREN_LIST_XHP_CHILDREN = 'xhp_children_list_xhp_children';
/** `xhp_children_declaration->xhpChildrenSemicolon` */
const Member MEMBER_XHP_CHILDREN_SEMICOLON = 'xhp_children_semicolon';
/** `xhp_expression->xhpClose` */
const Member MEMBER_XHP_CLOSE = 'xhp_close';
/** `xhp_close->xhpCloseLeftAngle` */
const Member MEMBER_XHP_CLOSE_LEFT_ANGLE = 'xhp_close_left_angle';
/** `xhp_close->xhpCloseName` */
const Member MEMBER_XHP_CLOSE_NAME = 'xhp_close_name';
/** `xhp_close->xhpCloseRightAngle` */
const Member MEMBER_XHP_CLOSE_RIGHT_ANGLE = 'xhp_close_right_angle';
/** `xhp_enum_type->xhpEnumKeyword` */
const Member MEMBER_XHP_ENUM_KEYWORD = 'xhp_enum_keyword';
/** `xhp_enum_type->xhpEnumLeftBrace` */
const Member MEMBER_XHP_ENUM_LEFT_BRACE = 'xhp_enum_left_brace';
/** `xhp_enum_type->xhpEnumLike` */
const Member MEMBER_XHP_ENUM_LIKE = 'xhp_enum_like';
/** `xhp_enum_type->xhpEnumRightBrace` */
const Member MEMBER_XHP_ENUM_RIGHT_BRACE = 'xhp_enum_right_brace';
/** `xhp_enum_type->xhpEnumValues` */
const Member MEMBER_XHP_ENUM_VALUES = 'xhp_enum_values';
/** `XHP_lateinit->xhpLateinitAt` */
const Member MEMBER_XHP_LATEINIT_AT = 'xhp_lateinit_at';
/** `XHP_lateinit->xhpLateinitKeyword` */
const Member MEMBER_XHP_LATEINIT_KEYWORD = 'xhp_lateinit_keyword';
/** `xhp_expression->xhpOpen` */
const Member MEMBER_XHP_OPEN = 'xhp_open';
/** `xhp_open->xhpOpenAttributes` */
const Member MEMBER_XHP_OPEN_ATTRIBUTES = 'xhp_open_attributes';
/** `xhp_open->xhpOpenLeftAngle` */
const Member MEMBER_XHP_OPEN_LEFT_ANGLE = 'xhp_open_left_angle';
/** `xhp_open->xhpOpenName` */
const Member MEMBER_XHP_OPEN_NAME = 'xhp_open_name';
/** `xhp_open->xhpOpenRightAngle` */
const Member MEMBER_XHP_OPEN_RIGHT_ANGLE = 'xhp_open_right_angle';
/** `xhp_required->xhpRequiredAt` */
const Member MEMBER_XHP_REQUIRED_AT = 'xhp_required_at';
/** `xhp_required->xhpRequiredKeyword` */
const Member MEMBER_XHP_REQUIRED_KEYWORD = 'xhp_required_keyword';
/** `xhp_simple_attribute->xhpSimpleAttributeEqual` */
const Member MEMBER_XHP_SIMPLE_ATTRIBUTE_EQUAL = 'xhp_simple_attribute_equal';
/** `xhp_simple_attribute->xhpSimpleAttributeExpression` */
const Member MEMBER_XHP_SIMPLE_ATTRIBUTE_EXPRESSION = 'xhp_simple_attribute_expression';
/** `xhp_simple_attribute->xhpSimpleAttributeName` */
const Member MEMBER_XHP_SIMPLE_ATTRIBUTE_NAME = 'xhp_simple_attribute_name';
/** `XHP_simple_class_attribute->xhpSimpleClassAttributeType` */
const Member MEMBER_XHP_SIMPLE_CLASS_ATTRIBUTE_TYPE = 'xhp_simple_class_attribute_type';
/** `xhp_spread_attribute->xhpSpreadAttributeExpression` */
const Member MEMBER_XHP_SPREAD_ATTRIBUTE_EXPRESSION = 'xhp_spread_attribute_expression';
/** `xhp_spread_attribute->xhpSpreadAttributeLeftBrace` */
const Member MEMBER_XHP_SPREAD_ATTRIBUTE_LEFT_BRACE = 'xhp_spread_attribute_left_brace';
/** `xhp_spread_attribute->xhpSpreadAttributeRightBrace` */
const Member MEMBER_XHP_SPREAD_ATTRIBUTE_RIGHT_BRACE = 'xhp_spread_attribute_right_brace';
/** `xhp_spread_attribute->xhpSpreadAttributeSpreadOperator` */
const Member MEMBER_XHP_SPREAD_ATTRIBUTE_SPREAD_OPERATOR = 'xhp_spread_attribute_spread_operator';
/** `yield_break_statement->yieldBreakBreak` */
const Member MEMBER_YIELD_BREAK_BREAK = 'yield_break_break';
/** `yield_break_statement->yieldBreakKeyword` */
const Member MEMBER_YIELD_BREAK_KEYWORD = 'yield_break_keyword';
/** `yield_break_statement->yieldBreakSemicolon` */
const Member MEMBER_YIELD_BREAK_SEMICOLON = 'yield_break_semicolon';
/** `yield_expression->yieldKeyword` */
const Member MEMBER_YIELD_KEYWORD = 'yield_keyword';
/** `yield_expression->yieldOperand` */
const Member MEMBER_YIELD_OPERAND = 'yield_operand';
// #endregion
